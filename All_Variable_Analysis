# Master thesis Moritz Schillinger 02/2020 - 08/2020
# Topic: Impacts of Climate Change on the Amazon Rainforest: 
#        Analysis of cVeg, treefrac (biomass) and precipitation simulations from CMIP6 Earth System Models
############################################################################################
# Main processing steps:
#
# Process CMIP6 model output (netCDF datasets) for variables cVeg, treeFrac and precipitation
# under SSP1 and SSP5 for the Amazone rainforest biome (2015-2100) with the raster package
# 
# For each model-variable-ssp-combination it does the following:
# Calculate single model spatial mean (sA1)
# Calculate multi-model ensemble spatial mean and plot (A1) ensemble line graph (time series)
# Calculate single model absolute change (sB1) and relative change (sB2) for 2015-2030 vs. 2085-2100
# Calculate multi-model ensemble absolute change (B1) and relative change (B2) and plot multi-model ensemble difference maps (with model agreement)
# 
##### 0. Packages ##########################################################################

# cVeg SSP126: 16 Modelle
# cVeg SSP585: 17 Modelle
# treeFrac SSP126: 15 Modelle
# treeFrac SSP585: 15 Modelle

# Load packages
library(rgdal)     # for spatial data manipulation. Read or write spatial data files (raster uses it behind the scenes).
library(raster)    # for raster data manipulation. Defines alternative classes for raster data (RasterLayer, RasterStack, RasterBrick)
library(ncdf4)     # open netcdfs
library(sp)        # for vector data manipulation. read spatial features e.g. shapefiles
library(sf)        # for spatial data manipulation. simple features - successor of sp package
library(rasterVis) # for visualisation of time-series data
library(RColorBrewer) # for color ramps
library(grDevices) # for rainbow colour ramp
library(ggplot2)   # for making good plots (gg - grammar of graphics)
library(viridis)   # for nice color ramps and so
library(plotrix)   # for axis breaks
library(tidync)
library(Rmisc)     # for confidence interval calculation
library(colorspace)# for nice color ramps and so
library(xlsx)
library(openxlsx)
library(jcolors)
library(palr)
library(shiny)

############################################################################################
##### 1. Preparations #####

amazon_biome <- readOGR("E:/Masterarbeit/Data/Other_Data/Amazon_biome/Amazon_Biome_WWF_Olson/data/commondata/data0/amazonia.shp")
amazon_biome_extent <- extent(amazon_biome) + c(-1,1,-1,1) # Erweiterung des Extents um jeweils 1 Grad nach aussen, um den gesamten Extent im Plot zu sehen.
country_boundaries <- readOGR("E:/Masterarbeit/Data/Other_Data/Global_administrative_boundaries_national_level/gaul0_asap/gaul0_asap.shp")
amazon_rivers <- readOGR("E:/Masterarbeit/Data/MajorRivers_NaturalEarth/rivers_in_the_Amazon.shp")
years <- format(seq(as.Date('2015/01/16'), as.Date('2100/12/16'), by='month'), '%Y%m') 

# ab hier mit levelplot von rasterVis arbeiten
original_oma = par(oma = c(0,0,0,0))
#original_oma <- c(0.0, 0.0, 0.0, 0.0) # save original outer margin areas (0 0 0 0)
par(mfrow=c(1,1))
plot(amazon_biome, type = "n") # start a new plot with the extent of amazon biome, empty (type="n" means empty) # vlt einfach um plotfenszter zu initieren?
lines(country_boundaries, col='grey65')
setwd(dir = "E:/Masterarbeit/Data/CMIP6_ssp585_bgc")
WD = getwd()
directories_ssp585_bgc <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cv_ssp585_bgc <- directories_ssp585_bgc[ grepl("cVeg", directories_ssp585_bgc) ] # grepl fungiert wie 'pattern' (bei list.dirs nicht verfügbar)
directories_tf_ssp585_bgc <- directories_ssp585_bgc[ grepl("treeFrac", directories_ssp585_bgc) ]
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data")
WD = getwd()
directories <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cv <- directories[ grepl("cVeg", directories) ] # grepl fungiert wie 'pattern' (bei list.dirs nicht verfügbar)
directories_tf <- directories[ grepl("treeFrac", directories) ]
directories_cv_ssp126 <- directories_cv[ grepl("SSP126", directories_cv) ] # now all folder directories named with "cVeg" and with "SSP585" are listed
directories_cv_ssp585 <- directories_cv[ grepl("SSP585", directories_cv) ]
directories_tf_ssp126 <- directories_tf[ grepl("SSP126", directories_tf) ]
directories_tf_ssp585 <- directories_tf[ grepl("SSP585", directories_tf) ]

#directories_cv_ssp126 <- directories_cv_ssp126[1:2]
# directories Carbon Data
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon")
WD = getwd()
directories_c <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cL <- directories_c[ grepl("cLand", directories_c) ]
directories_cL_ssp126 <- directories_cL[ grepl("SSP126", directories_cL) ]
directories_cL_ssp585 <- directories_cL[ grepl("SSP585", directories_cL) ]
directories_gpp <- directories_c[ grepl("gpp", directories_c) ]
directories_gpp_ssp126 <- directories_gpp[ grepl("SSP126", directories_gpp) ]
directories_gpp_ssp585 <- directories_gpp[ grepl("SSP585", directories_gpp) ]
directories_npp <- directories_c[ grepl("npp", directories_c) ]
directories_npp_ssp126 <- directories_npp[ grepl("SSP126", directories_npp) ]
directories_npp_ssp585 <- directories_npp[ grepl("SSP585", directories_npp) ]
directories_nep <- directories_c[ grepl("nep", directories_c) ]
directories_nep_ssp126 <- directories_nep[ grepl("SSP126", directories_nep) ]
directories_nep_ssp585 <- directories_nep[ grepl("SSP585", directories_nep) ]
directories_nbp <- directories_c[ grepl("nbp", directories_c) ]
directories_nbp_ssp126 <- directories_nbp[ grepl("SSP126", directories_nbp) ]
directories_nbp_ssp585 <- directories_nbp[ grepl("SSP585", directories_nbp) ]

crs_wgs84 <- crs(amazon_biome) # Rasterstacks will be projected to this crs if they are in another crs
colRamp <- colorRampPalette(c("#770000", "#BB7F7F", "grey95", "#80FF00", "#00FF80", "#0080FF", "#0000FF", "#FF00FF")) #rot,gelb,grau(0),hellgrün,grünblau,mittelblau, dunkelblau, magenta
colors <- colorRampPalette(c("#bd0000", "white", "#007a15"))  # alternative IPCC colors: c("#67001F", "#F7F7F7", "#053061")

# IPCC Colors from Visual Style Guide
col_rcp126 <- "#003566" # dunkelblau
col_rcp_126_shade <- "#4393c3" # hellblau
col_rcp585 <- "#990003" # dunkelrot
col_rcp_585_shade <- "#f4af9c" # hellrot
col_Ensmean <- "black"
col_shade1 <- "#808080"
col_shade2 <- "#5baeb2"
col_shade3 <- "#ccae71"
col_shade4 <- "#bfbfbf"
col_shade5 <- "#dfedc3"
CI_shade_red <- adjustcolor("red",alpha.f=0.5)
CI_shade_blue <- adjustcolor("blue",alpha.f=0.5)
CI_shade_grey <- adjustcolor("grey25",alpha.f=0.5)
CI_shade_black <- adjustcolor("black",alpha.f=0.5)
plot_extent <- extent(-80.5, -44, -18.5, 9) # length=4; order= xmin, xmax, ymin, ymax)
RdYlGn12 <- c("#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#00b2c6")
RdYlGn11 <- c("#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837")
RdYlGn12_9positiv <- c("#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C","#602282","#9000A8")
RdYlGn15_12positiv<- c("#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C","#602282","#9000A8","#B15170","#D2A238","#F3F300")
RdYlGn11_2positiv <-  c("#1C0B01","#410737","#66046E","#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a")   ##es geht von rot nach grün

#RdYlGn (12)
#FFFF00 (neu dazu - gelb - außergewöhnlich tiefer Wert)
#1C0B01 (neu dazu - schwarzbraun)
#410737 (neu dazu - lilabraun)
#66046E (neu dazu - dunkellila)
#8c01a5 (neu dazu - lilarot)
#a50126 (dunkelrot)
#d73027
#f56d43
#fdae61
#fee08a (hellstes rot)
#d9ef8b (hellstes grün)
#a7d96a
#67bd64
#1a984f
#006837 (dunkelgrün)
#00b2c6 (türkisgrün)
# verwende ich diese ramp?  
  
rainbow2 <- jcolors_contin(palette=c("rainbow"))
rainbow <- rainbow2(24)
#rainbow <- sst_pal(palette=TRUE)
#rainbow <- rainbow$cols[seq(1,240,10)]

ens_ssp1 <- "SSP126"
ens_ssp5 <- "SSP585"
ens_ssp5bgc <- "SSP5-BGC"
mean <- "ensemble mean"
col_mean <- "black"
c1 <- rainbow[1]#    ACCESS-CM2
m1 <- "ACCESS-CM2"
c2 <- "#941400" #rainbow[1]#rainbow[2]#    ACCESS-ESM1-5
m2 <- "ACCESS-ESM1-5"
c3 <- "#005a6f"#rainbow[3]#    BCC-CSM2-MR
m3 <- "BCC-CSM2-MR"
c4 <- rainbow[4]#    CanESM5-CanOE
m4 <- "CanESM5-CanOE"
c5 <- "grey39"  #    CanESM5
m5 <- "CanESM5"
c6 <- rainbow[20]#    CESM2-WACCM
m6 <- "CESM2-WACCM"
c7 <- '#f5ff00' #rainbow[7]#    CESM2 (leuchtgelb)
m7 <- "CESM2"
c8 <- "hotpink" #    CMCC-CM2-SR5 
m8 <- "CMCC-CM2-SR5"
c9 <- rainbow[9]#    CNRM-CM6-1-HR 
m9 <- "CNRM-CM6-1-HR"
c10 <- "wheat3"#  CNRM-CM6-1
m10 <- "CNRM-CM6-1" 
c11 <- rainbow[11]#  CNRM-ESM2-1
m11 <- "CNRM-ESM2-1" 
c12 <- rainbow[13]  #  EC-Earth3-Veg
m12 <- "EC-Earth3-Veg"
c13 <- "magenta"    #  EC-Earth3
m13 <- "EC-Earth3"
c14 <- rainbow[14]#  HadGEM3-GC31-LL
m14 <- "HadGEM3-GC31-LL"
c15 <- rainbow[15]#  INM-CM4-8
m15 <- "INM-CM4-8"
c16 <- "darkmagenta" #rainbow[16]#  INM-CM5-0
m16 <- "INM-CM5-0"
c17 <- rainbow[17]#  IPSL-CM6A-LR
m17 <- "IPSL-CM6A-LR"
c18 <- "#ff6b6b" #rainbow[18]#  MIROC-ES2L
m18 <- "MIROC-ES2L"
c19 <- rainbow[6]#rainbow[19]#  MPI-ESM1-2-HR
m19 <- "MPI-ESM1-2-HR"
c20 <- "cyan"# rainbow[20]#  MPI-ESM1-2-LR
m20 <- "MPI-ESM1-2-LR"
c21 <- "#077000"#rainbow[21]#  MRI-ESM2-0
m21 <- "MRI-ESM2-0"
c22 <- "#00f700"  #  NorESM2-LM (neongrün)
m22 <- "NorESM2-LM"
c23 <- rainbow[24]#  NorESM2-MM
m23 <- "NorESM2-MM"
c24 <- rainbow[5]  #  UKESM1-0-LL
m24 <- "UKESM1-0-LL"
Models <- c("ACCESS-CM2", "ACCESS-ESM1-5", "BCC-CSM2-MR", "CanESM5-CanOE", "CanESM5", "CESM2-WACCM", "CESM2",
            "CMCC-CM2-SR5", "CNRM-CM6-1-HR", "CNRM-CM6-1", "CNRM-ESM2-1", "EC-Earth3-Veg", "EC-Earth3",
            "HadGEM3-GC31-LL", "INM-CM4-8", "INM-CM5-0", "IPSL-CM6A-LR", "MIROC-ES2L", "MPI-ESM1-2-HR",
            "MPI-ESM1-2-LR", "MRI-ESM2-0", "NorESM2-LM", "NorESM2-MM", "UKESM1-0-LL")
Models_cVeg <- c(ens_ssp1, ens_ssp5,m2,m3,m4,m5,m6,m7,m11,m12,m15,m16,m17,m18,m20,m21,m22,m23,m24) #17
Models_cVeg_ssp1 <- c(ens_ssp1, ens_ssp5,m2,m3,m4,m5,m6,m7,m11,m12,m15,m16,m17,m18,m20,m22,m23,m24) #16
Models_treeFrac <- c(ens_ssp1, ens_ssp5, m1,m4,m5,m6,m7,m10,m11,m12,m14,m15,m16,m17,m19,m20,m24) #15
Models_cVegBGC <- c(ens_ssp5bgc, m5,m11,m18,m21,m24) #5
Models_treeFracBGC <- c(ens_ssp5bgc, m11,m24) #2
Models_cLand <- c(ens_ssp1, ens_ssp5, m1,m5,m6,m7,m8,m11,m17,m18,m20,m22,m23)#11
Models_cLand_ssp1 <- c(ens_ssp1, ens_ssp5, m1,m5,m6,m7,m11,m17,m18,m20,m22,m23)#10
Models_gpp <- c(mean, m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m21,m22,m23)#20
Models_gpp_ssp1 <- c(mean, m2,m3,m4,m5,m6,m7,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m22,m23)#18
Models_npp <- c(mean, m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m21,m22,m23)#20
Models_npp_ssp1 <- c(mean, m2,m3,m4,m5,m6,m7,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m22,m23)#18
Models_nep <- c(mean,m2,m3,m5,m6,m7,m8,m11,m13,m17,m20,m21,m22,m23) #13
Models_nep_ssp1 <- c(mean,m2,m3,m5,m6,m7,m11,m13,m17,m20,m22,m23)#11
Models_nbp <- c(mean,m2,m4,m5,m6,m7,m8,m11,m13,m15,m16,m17,m18,m20,m21,m22,m23)
Models_nbp_ssp1 <- c(mean,m2,m4,m5,m6,m7,m11,m13,m15,m16,m17,m18,m20,m22,m23)

Models_cVeg_cLand <- c(mean,m2,m3,m4,m5,m6,m7,m8,m11,m12,m15,m16,m17,m18,m20,m21,m22,m23,m24)
rainbow_cVeg_cLand <- c(col_mean,c2,c3,c4,c5,c6,c7,c8,c11,c12,c15,c16,c17,c18,c20,c21,c22,c23,c24)

Models_nbp_nep <- c(mean,m2,m3,m4,m5,m6,m7,m8,m11,m13,m15,m16,m17,m18,m20,m21,m22,m23)
rainbow_nbp_nep <- c(col_mean,c2,c3,c4,c5,c6,c7,c8,c11,c13,c15,c16,c17,c18,c20,c21,c22,c23)

# Farben aller betreffenden Single Models + SSP1/5 vorangestellt
rainbow_cVeg <- c(col_Ensmean, col_Ensmean, c2,c3,c4,c5,c6,c7,c11,c12,c15,c16,c17,c18,c20,c21,c22,c23,c24)
rainbow_cVeg_ssp1 <- c(col_Ensmean, col_Ensmean, c2,c3,c4,c5,c6,c7,c11,c12,c15,c16,c17,c18,c20,c22,c23,c24)
rainbow_treeFrac <- c(col_Ensmean, col_Ensmean, c1,c4,c5,c6,c7,c10,c11,c12,c14,c15,c16,c17,c19,c20,c24)
rainbow_cVegBGC <- c(col_Ensmean, c5,c11,c18,c21,c24)
rainbow_treeFracBGC <- c(col_Ensmean, c11,c24) #2
rainbow_cLand <- c(col_Ensmean, col_Ensmean, c2,c5,c6,c7,c8,c11,c17,c18,c20,c22,c23)#10
rainbow_cLand_ssp1 <- c(col_Ensmean, col_Ensmean, c2,c5,c6,c7,c11,c17,c18,c20,c22,c23)#11
rainbow_gpp <- c(col_mean, c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c21,c22,c23)#20
rainbow_gpp_ssp1 <- c(col_mean, c2,c3,c4,c5,c6,c7,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c22,c23)#18
rainbow_npp <- c(col_mean, c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c21,c22,c23)#20
rainbow_npp_ssp1 <- c(col_mean, c2,c3,c4,c5,c6,c7,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c22,c23)#18
rainbow_nep <- c(col_mean, c2,c3,c5,c6,c7,c8,c11,c13,c17,c20,c21,c22,c23)
rainbow_nep_ssp1 <- c(col_mean, c2,c3,c5,c6,c7,c11,c13,c17,c20,c22,c23)
rainbow_nbp <- c(col_mean, c2,c4,c5,c6,c7,c8,c11,c13,c15,c16,c17,c18,c20,c21,c22,c23)
rainbow_nbp_ssp1 <- c(col_mean, c2,c4,c5,c6,c7,c11,c13,c15,c16,c17,c18,c20,c22,c23)


  
  
MyOrder = matrix(1:24, nrow = 24, ncol = 4, byrow = FALSE)
#legend("bottom",Models[MyOrder], fill=rainbow[MyOrder] ,ncol=4)
horizontal <- seq(1,24,1)
vertikal <- seq(1,24,1)

plot(horizontal,vertikal, type="n")
abline(v=1, col=c1, lwd=5)
abline(v=2, col=c2, lwd=5)
abline(v=3, col=c3, lwd=5)
abline(v=4, col=c4, lwd=5)
abline(v=5, col=c5, lwd=5)
abline(v=6, col=c6, lwd=5)
abline(v=7, col=c7, lwd=5)
abline(v=8, col=c8, lwd=5)
abline(v=9, col=c9, lwd=5)
abline(v=10, col=c10, lwd=5)
abline(v=11, col=c11, lwd=5)
abline(v=12, col=c12, lwd=5)
abline(v=13, col=c13, lwd=5)
abline(v=14, col=c14, lwd=5)
abline(v=15, col=c15, lwd=5)
abline(v=16, col=c16, lwd=5)
abline(v=17, col=c17, lwd=5)
abline(v=18, col=c18, lwd=5)
abline(v=19, col=c19, lwd=5)
abline(v=20, col=c20, lwd=5)
abline(v=21, col=c21, lwd=5)
abline(v=22, col=c22, lwd=5)
abline(v=23, col=c23, lwd=5)
abline(v=24, col=c24, lwd=5)



FUN1 = function(x){quantile(x, probs=0.25, na.rm=TRUE)} #upper quartile
FUN3 = function(x){quantile(x, probs=0.75, na.rm=TRUE)} #lower quartile
Max <- function(x){max(x, na.rm=TRUE)}
Min <- function(x){min(x, na.rm=TRUE)}

#B15170
#D2A238
#F3F300

#RdYlGn (12)
#8c01a5 (lilarot)
#a50126 (dunkelrot)
#d73027
#f56d43
#fdae61
#fee08a (hellstes rot)
#d9ef8b (hellstes grün)
#a7d96a
#67bd64
#1a984f
#006837 (dunkelgrün)
#00b2c6 (türkisgrün)
# verwende ich diese ramp?

#     Define Area 1/2/3
#area1 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!
#area2 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!
#area3 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!

# BRAUCHBARES AUS DEM ORIGINAL CODE OHNE FOR LOOP #
#names(cVeg_SSP585_UKESM10LL)
#view(cVeg_SSP585_UKESM10LL)
#str(cVeg_SSP585_UKESM10LL)

# von Allans Script #par(mai=c(0.5,0.8,0.8,0.5))   
# mai=graph margins in inches. A numerical vector of the form c(bottom, left, top, right) which gives the margin size specified in inches.
# grid(NULL,NULL, lty = 1, col = "gray")

#colorramp <- colorRampPalette(c("#ff6161", "#f57043", "#63b32f", "#8daa04", "#af9e00", "#cc9000", "#e48025", "#00ba85", "#00ba54", "#0255ba"))
#animate(cVeg_SSP585_UKESM10LL, pause=0.003, n=1, col=colorramp(100)) # colorramp verbesserungswürdig!

#legend(0, 0, legend=c("cVeg SSP585 Ensemble Mean", "cVeg SSP126 Ensemble Mean"),
#       col=c("#990002", "#003466"), lty=2:2, lwd=3, cex=0.8, text.font=2, # colors according IPCC SSP colors!
#       xjust = 0,      # 0.5 means center adjusted
#       yjust = 0,      # 0.5 means center adjusted
#       x.intersp = 0.5, # adjust character interspacing as you like to effect box width
#       y.intersp = 0.5,  # adjust character interspacing to effect box height
#      adj = c(0, 0.5))  # adjust string position (default values used here)
# cex = 1.5,      # change cex if you like (not used here)
# text.font = 2)  # bold the text if you like (not used here)
#old_tf_585 <- treeFrac_SSP585_UKESM10LL_spmean

#par(usr=c(-80.62500, -43.12500, -20, 10)) # funktioniert dieser Plot-Befehl?

############################################################################################
##### 2. MODEL ITERATION #####
##### 2.1 cVeg SSP126 #####

df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_cv_ssp126)) 
{ 
  setwd(dir = directories_cv_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  #lines(old_tf_585, col='green')
 # rm(old_tf_585)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  #colnames(spmean_yr)[2] <- paste(model1)  #setNames(object = df[i+1], c(paste(model1)))
  #i = 1
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #setNames(object = df[i+1], c(paste(model1)))
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       cex.main=1, cex.lab=0.9, cex.axis=1)    # 
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2),
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
       # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.2 cVeg SSP585 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_cv_ssp585)) 
{ 
  setwd(dir = directories_cv_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       cex.main=1, cex.lab=0.9, cex.axis=1)    # 
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2),
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
       # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.3 treeFrac SSP126 ######
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_tf_ssp126)) 
{ 
  setwd(dir = directories_tf_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100,
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-20,20,4),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  #   par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change) - braucht es nicht für treefrac

}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.4 treeFrac SSP585 ######
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_tf_ssp585)) 
{ setwd(dir = directories_tf_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  #lines(old_tf_585, col='green')
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100,
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-20,20,4),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  #   par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change) - braucht es nicht für treefrac
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.5 cVeg SSP585-BGC #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_cv_ssp585_bgc)) 
{ 
  setwd(dir = directories_cv_ssp585_bgc[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  #par(mar=c(5,4,4,2) + 0.1)
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Vegetation Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,30),
       cex.main=1, cex.lab=0.9, cex.axis=1)    # 
  axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot(relchange1530_85100, 
               main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
               breaks=seq(-60,160,20),
               col=RdYlGn12_9positiv,
               las=1,
               cex.main=1, cex.lab=0.75, cex.axis=0.75,
               legend=TRUE,
               ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.6 treeFrac SSP585-BGC #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_tf_ssp585_bgc)) 
{ setwd(dir = directories_tf_ssp585_bgc[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1) 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  #lines(old_tf_585, col='green')
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",    # 
       xaxt="n",   # 
       ylab="Tree Fraction [%]",
       yaxt="n",
       ylim=c(40,100),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(40, 100, 5), label=seq(40, 100, 5), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100,
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-20,20,4),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # sB2 plot:  Single model ensemble difference map (relative change) - braucht es nicht für treefrac
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.8.1 cLand SSP126 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_cL_ssp126)) 
{ 
  setwd(dir = directories_cL_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Total Terrestrial Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,50),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 50, 5), label=seq(0, 50, 5), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  #lines(old_tf_585, col='green')
  # rm(old_tf_585)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab="Total Terrestrial Carbon [kgC/m2]",
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,50),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 50, 5), label=seq(0, 50, 5), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2),
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.8.2 cLand SSP585 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_cL_ssp585)) 
{ 
  setwd(dir = directories_cL_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE) # na.rm=TRUE --> remove NA values
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,0.9,0.8,0.5))
  plot(spmean, col=col_rcp585,
       main= paste("Mean", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab="Total Terrestrial Carbon [kgC/m2]",
       yaxt="n",
       ylim=c(0,50),
       #  axis.break(axis=1,breakpos=NULL,pos=NULL,bgcol="white",breakcol="black", # Places a "break" mark on an axis on an existing plot.(eg zigzag symbol on y-Axis)
       # style="slash",brw=0.02)
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 50, 5), label=seq(0, 50, 5), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  #lines(old_tf_585, col='green')
  # rm(old_tf_585)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # reproduziere die zahl 2015 12mal und dasselbe für 2016-2100.
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x)
  colnames(df)[i+1] <- paste(model1)  #
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab="Total Terrestrial Carbon [kgC/m2]",
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,50),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 50, 5), label=seq(0, 50, 5), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2),
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.9.1 GPP SSP126 ####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"

for (i in 1:length(directories_gpp_ssp126)) 
{ 
  setwd(dir = directories_gpp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask # Multiplikation erfolgt in New_diffmap_v1.R!  *((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000)
  # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # sobald stack bereits in neue Einheit umgewandelt wurde,braucht es hier keine Umrechnung mehr!
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(0,4),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 4, 0.4), label=round(seq(0, 4, 0.4), digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  #lines(old_tf_585, col='green')
  #plot(1:10, ylab=expression('hi'[5]*'there'[6]^8*'you'[2]))
  # rm(old_tf_585)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden (gilt nur für gpp,npp,nep,nbp - überall dort wo von monatlichen zu jährlichen Werten aggregiert wird)
  spmean_yr$x <- spmean_yr$x*12
  # conversion from monthly to yearly values by *12
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,48),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 48, 4), label=seq(0, 48, 4), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE) #c(1,1,60) ist der Aggregation factor: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # inspect variable range
  summary(abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in GPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.9.2 GPP SSP585 ####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_gpp_ssp585)) 
{ 
  setwd(dir = directories_gpp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(0,4),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 4, 0.4), label=round(seq(0, 4, 0.4), digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  #lines(old_tf_585, col='green')
  #plot(1:10, ylab=expression('hi'[5]*'there'[6]^8*'you'[2]))
  # rm(old_tf_585)
  # Temporäre WD für Plots speichern (in PLOTS/SINGLE_MODEL) -> wird oben wieder überschrieben
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  # conversion from monthly to yearly values by *12
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,48),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 48, 4), label=seq(0, 48, 4), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  # CHECKEN OB MIT CALC() DIESELBEN ERGEBNISSE KOMMEN!
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in GPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.10.1 NPP SSP126 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_npp_ssp126)) 
{ 
  setwd(dir = directories_npp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(0,1.666),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 1.666, 0.166), label=round(seq(0, 1.666, 0.166), digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,20),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 20, 2), label=seq(0, 20, 2), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=round(seq(-4.8e-08, 4.8e-08,8e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.10.2 NPP SSP585 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_npp_ssp585)) 
{ 
  setwd(dir = directories_npp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(0,1.666),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 1.666, 0.166), label=round(seq(0, 1.666, 0.166), digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(0,20),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(0, 20, 2), label=seq(0, 20, 2), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=round(seq(-4.8e-08, 4.8e-08,8e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.11.1 NEP SSP126 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_nep_ssp126)) 
{ 
  setwd(dir = directories_nep_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP126")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(-0.42,0.42),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=round(seq(-0.42,0.42,0.07),digits=2), label=round(seq(-0.42,0.42,0.07),digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP126_UKESM10LL_spmean)
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean), col=col_rcp126, lwd=2)
  par(xpd=TRUE)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(-5,5),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean_yr$x), col=col_rcp126, lwd=2)
  par(xpd=TRUE)
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  
  summary(abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.2e-08, 1.2e-08,2e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NEP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
}

### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.11.2 NEP SSP585 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_nep_ssp585)) 
{ 
  setwd(dir = directories_nep_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(-0.42,0.42),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=round(seq(-0.42,0.42,0.07),digits=2), label=round(seq(-0.42,0.42,0.07),digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean), col=col_rcp585, lwd=2)
  par(xpd=TRUE)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(-5,5),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean_yr$x), col=col_rcp585, lwd=2)
  par(xpd=TRUE)
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.2e-08, 1.2e-08,2e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NEP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.12.1 NBP SSP126 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_nbp_ssp126)) 
{ 
  setwd(dir = directories_nbp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP126")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp126,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(-0.42,0.42),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=round(seq(-0.42,0.42,0.07),digits=2), label=round(seq(-0.42,0.42,0.07),digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP126_UKESM10LL_spmean)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean), col=col_rcp126, lwd=2)
  par(xpd=TRUE)
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp126,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(-5,5),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean_yr$x), col=col_rcp126, lwd=2)
  par(xpd=TRUE)
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.2e-08, 1.2e-08,2e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NBP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
}
### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
##### 2.12.2 NBP SSP585 #####
df <- data.frame()[1:86, ] # empty data frame with 0 columns and 200 rows
df[1] <- c(seq(2015,2100))
row.names(df) <- as.character(c(seq(2015,2100)))
names(df)[names(df)=="V1"] <- "year"
for (i in 1:length(directories_nbp_ssp585)) 
{ 
  setwd(dir = directories_nbp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)
  } 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask #*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         value = rasterstack_mask)
  spmean <- cellStats(rasterstack_mask, stat='mean', na.rm=TRUE)
  spmean <- spmean*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/monate)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  assign(x = paste(name, "spmean", sep = "_"), 
         value = spmean)
  # sA1 plot: Single model line graph (time series)
  par(mai=c(0.5,1.1,0.8,0.5))
  # spmean monthly
  plot(spmean, col=col_rcp585,
       main= paste("Mean monthly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # las (label style) 1=horizontal. This changes the orientation angle of the labels:0: The default, parallel to the axis, 1: Always horizontal
       type="l",   # type = line
       lty=1,      # line type: 1=continuous,2=dashed,5=dashed
       lwd=2,      # line width
       xlab="",    # time axis
       xaxt="n",   # don't name x-Axis (but name it according to axis())
       ylab=expression('Mg C ha'^-1*' month'^-1),
       yaxt="n",
       ylim=c(-0.42,0.42),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=round(seq(-0.42,0.42,0.07),digits=2), label=round(seq(-0.42,0.42,0.07),digits=2), las=1)
  axis(side=1, at=seq(1, 1032,120), labels=seq(2015,2100,10)) # 1032 entspricht length(cVeg_SSP585_UKESM10LL_spmean)
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean), col=col_rcp585, lwd=2)
  par(xpd=TRUE)
  setwd(dir = "E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL")
  dev.print(jpeg, paste("sA1", name, "spmean.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #spmean jährliche Werte
  spmean_yr <- data.frame(spmean)
  spmean_yr[1032, 1:2] = c(NA, NA)
  year <- rep(c(seq(2015,2100)), each = 12) # 
  spmean_yr$year <- year
  spmean_yr <- aggregate(spmean_yr$spmean, FUN=mean, by=list(spmean_yr$year), na.rm=TRUE, na.action=NULL)
  df[[i+1]] <- data.frame(spmean_yr$x*12)
  colnames(df)[i+1] <- paste(model1)  #
  # jetzt muss der MW noch mit 12 multipliziert werden
  spmean_yr$x <- spmean_yr$x*12
  plot(as.numeric(spmean_yr$x), col=col_rcp585,
       main= paste("Mean yearly", variable, "in the Amazon biome \n", ssp, "//", model1, sep= " "),
       las=1,      # 
       type="l",   # 
       lty=1,      # 
       lwd=2,      # 
       xlab="",
       ylab=expression('Mg C ha'^-1*' yr'^-1),
       xaxt="n",   # 
       yaxt="n",
       ylim=c(-5,5),
       cex.main=1, cex.lab=0.9, cex.axis=1    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
  axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
  par(xpd=FALSE)
  abline(h=0, col='grey65')
  lines(as.numeric(spmean_yr$x), col=col_rcp585, lwd=2)
  par(xpd=TRUE)
  dev.print(jpeg, paste("sA1", name, "spmean_YR.jpg", sep="_"), 
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  #
  fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
  fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
  assign(x = paste(name, "fiveyrmean", sep = "_"), 
         value = fiveyrmean)
  t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
  t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
  abschange1530_85100 <- t85100-t1530
  relchange1530_85100 <- (abschange1530_85100/t1530)*100
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  # sB1 plot:  Single model ensemble difference map (absolute change)
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.2e-08, 1.2e-08,2e-09), digits = 10),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NBP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
}

### DF der Variablen-SSP-Kombination (VSC) ####
#df_copy <- df
#df <- df_copy
df$year <- NULL # remove year column (weil sonst row-wise calculations fehlschlagen)
df$Ens_Mean <- rowMeans(df,na.rm=TRUE) # Mean per row 
df$max <- apply(df, MARGIN = 1, FUN = Max)
df$min <- apply(df, MARGIN = 1, FUN = Min)
df$Q1 <- apply(df, MARGIN = 1, FUN = FUN1) # MARGIN:for a matrix 1 indicates rows, 2 indicates columns
df$Q3 <- apply(df, MARGIN = 1, FUN = FUN3)
# r87 = mean 1530
df3 <- as.data.frame(t(colMeans(df[1:16, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r88 = mean 85100
df3 <- as.data.frame(t(colMeans(df[71:86, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r89 =abs difference 85100-1530
df3 <- as.data.frame(t(as.numeric(df[88, 1:ncol(df)]-df[87, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r90 =rel difference ((85100-1530/1530)*100)
df3 <- as.data.frame(t(as.numeric(df[89, 1:ncol(df)]/df[87, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r91'=abs difference 30-15
df3 <- as.data.frame(t(as.numeric(df[16, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r92'=abs difference 100-85
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[71, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r93'=mean 1519
df3 <- as.data.frame(t(colMeans(df[1:5, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r94'=mean 2029
df3 <- as.data.frame(t(colMeans(df[6:15, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r95'=mean 3039
df3 <- as.data.frame(t(colMeans(df[16:25, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r96 =abs difference 100-15
df3 <- as.data.frame(t(as.numeric(df[86, 1:ncol(df)]-df[1, 1:ncol(df)])))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# r97 =rel difference 100-15 ((100-15/15)*100)
df3 <- as.data.frame(t(as.numeric(df[96, 1:ncol(df)]/df[1, 1:ncol(df)]*100)))
df <- as.data.frame(rbind(as.matrix(df), as.matrix(df3)))
# rename rownames
row.names(df) <- as.character(c(c(seq(2015,2100)), 
                                c("mean 1530", "mean 85100", "abs difference 85100-1530", 
                                  "rel difference 85100-1530 in pct", "abs difference 30-15", "abs difference 100-85",
                                  "mean 1519", "mean 2029", "mean 3039", "abs difference 100-15", "rel difference 100-15")))
assign(x = paste("df", variable, ssp, sep = "_"), 
       value = df) 
rm(df, df3)
rm(spmean_yr)
#### abschange/relchange Redchnung überprüfen ####
fiveyrmean <- aggregate(rasterstack_mask, c(1,1,60), na.rm=TRUE)
fiveyrmean <- fiveyrmean*12 # monthly mean to yearly mean!
assign(x = paste(name, "fiveyrmean", sep = "_"), 
       value = fiveyrmean)
t1530 <- (fiveyrmean[[1]]+fiveyrmean[[2]]+fiveyrmean[[3]])/3
t85100 <- (fiveyrmean[[15]]+fiveyrmean[[16]]+fiveyrmean[[17]]+fiveyrmean[[18]])/4
abschange1530_85100 <- t85100-t1530
relchange1530_85100 <- (abschange1530_85100/t1530)*100

plot(t1530, 
     main= paste("Mean monthly NBP 2015-2030 //", model1, sep=" "),
     #col=RdYlGn12,
     #col=RdYlGn10,
     col=brewer.pal(10, "RdYlGn"),
     breaks=seq(-0.00000002, 0.00000002,0.000000004),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     paste("Mean NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
     cex=1, adj=0, srt = 0)


####
plot(t85100, 
     main= paste("Mean monthly NBP 2085-2100 //", model1, sep=" "),
     #col=RdYlGn12,
     #col=RdYlGn10,
     col=brewer.pal(10, "RdYlGn"),
     breaks=seq(-0.00000002, 0.00000002,0.000000004),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     paste("Mean NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
     cex=1, adj=0, srt = 0)


####
plot(relchange1530_85100, 
     main= paste("Mean NBP change 2015-2030 vs. 2085-2100 //", model1, sep=" "),
     breaks=seq(-90,270,30),
     col=RdYlGn12_9positiv,
     #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75)    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NBP \n[%]", cex=1, adj=0, srt = 0)



#################################

#rm(list = ls(pattern = "df_")) # removes all Workspace objects with this pattern

##### 3. MODEL ENSEMBLE PLOTS #####

####### LINE GRAPH Spmean - Altes 3.1 mit monatlichen Plots siehe 4.Papierkorb (anderes Skript) #####
####### 1. 1B: cVeg SSP585 ####

png(filename="1B_cVeg_SSP585.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/cVeg250km_SSP585") # um Namen für cVegssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (17)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="", yaxt="n", ylim=c(0,300), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cVeg_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)

lines(as.numeric(df_cVeg_SSP585[1:86, 1]), col=rainbow_cVeg[3],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 2]), col=rainbow_cVeg[4],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 3]), col=rainbow_cVeg[5],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 4]), col=rainbow_cVeg[6],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 5]), col=rainbow_cVeg[7],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 6]), col=rainbow_cVeg[8],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 7]), col=rainbow_cVeg[9],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 8]), col=rainbow_cVeg[10],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 9]), col=rainbow_cVeg[11],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 10]), col=rainbow_cVeg[12],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 11]), col=rainbow_cVeg[13],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 12]), col=rainbow_cVeg[14],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 13]), col=rainbow_cVeg[15],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 14]), col=rainbow_cVeg[16],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 15]), col=rainbow_cVeg[17],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 16]), col=rainbow_cVeg[18],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 17]), col=rainbow_cVeg[19],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 1]), col=rainbow_cVeg[3],lty=1, lwd=1.5)


axis(side=2, at=seq(0, 30, 2)*10, label=c(0,"",40,"",80,"",120,"",160,"",200,"",240,"", 280,""), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 30, 2)*10, labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cVeg[-2], #[MyOrder], 
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cVeg[-2],
                 lty=c(3,rep(1, times=17)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,rep(2, times=17)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("1B_cVeg_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1B_cVeg_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 1. 1A: cVeg SSP126 ######
png(filename="1A_cVeg_SSP126.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/cVeg250km_SSP126") # um Namen für cVegssp126 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (16)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Vegetation Carbon [MgC/ha]", yaxt="n", ylim=c(0,300), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)

lines(as.numeric(df_cVeg_SSP126[1:86, 1]), col=rainbow_cVeg_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 2]), col=rainbow_cVeg_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 3]), col=rainbow_cVeg_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 4]), col=rainbow_cVeg_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 5]), col=rainbow_cVeg_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 6]), col=rainbow_cVeg_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 7]), col=rainbow_cVeg_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 8]), col=rainbow_cVeg_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 9]), col=rainbow_cVeg_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 10]), col=rainbow_cVeg_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 11]), col=rainbow_cVeg_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 12]), col=rainbow_cVeg_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 13]), col=rainbow_cVeg_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 14]), col=rainbow_cVeg_ssp1[16],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 15]), col=rainbow_cVeg_ssp1[17],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 16]), col=rainbow_cVeg_ssp1[18],lty=1, lwd=1.5)

axis(side=2, at=seq(0, 30, 2)*10, label=c(0,"",40,"",80,"",120,"",160,"",200,"",240,"", 280,""), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 30, 2)*10, labels=FALSE, las=1, tcl=0.3)
#dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cVeg_ssp1[-2], #[MyOrder], 
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cVeg_ssp1[-2],
                 lty=c(1,rep(1, times=16)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,rep(2, times=16)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("1A_cVeg_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1A_cVeg_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 1. 1AB: cVeg SSP126 + 585 #####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/cVeg250km_SSP585") # um Namen für cVegssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (17)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Vegetation Carbon [kgC/m2]", yaxt="n", ylim=c(0,30), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cVeg_SSP126[1:86, 1]), col=rainbow_cVeg[3],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 2]), col=rainbow_cVeg[4],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 3]), col=rainbow_cVeg[5],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 4]), col=rainbow_cVeg[6],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 5]), col=rainbow_cVeg[7],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 6]), col=rainbow_cVeg[8],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 7]), col=rainbow_cVeg[9],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 8]), col=rainbow_cVeg[10],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 9]), col=rainbow_cVeg[11],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 10]), col=rainbow_cVeg[12],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 11]), col=rainbow_cVeg[13],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 12]), col=rainbow_cVeg[14],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 13]), col=rainbow_cVeg[15],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 14]), col=rainbow_cVeg[16],lty=1, lwd=1.5)
lines(as.numeric(df_cVeg_SSP126[1:86, 15]), col=rainbow_cVeg[17],lty=1, lwd=1.5)

lines(as.numeric(df_cVeg_SSP585[1:86, 1]), col=rainbow_cVeg[3],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 2]), col=rainbow_cVeg[4],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 3]), col=rainbow_cVeg[5],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 4]), col=rainbow_cVeg[6],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 5]), col=rainbow_cVeg[7],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 6]), col=rainbow_cVeg[8],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 7]), col=rainbow_cVeg[9],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 8]), col=rainbow_cVeg[10],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 9]), col=rainbow_cVeg[11],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 10]), col=rainbow_cVeg[12],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 11]), col=rainbow_cVeg[13],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 12]), col=rainbow_cVeg[14],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 13]), col=rainbow_cVeg[15],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 14]), col=rainbow_cVeg[16],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 15]), col=rainbow_cVeg[17],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 16]), col=rainbow_cVeg[18],lty=2, lwd=1.5)
lines(as.numeric(df_cVeg_SSP585[1:86, 17]), col=rainbow_cVeg[19],lty=2, lwd=1.5)



lines(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_cVeg_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=3, lwd=4)
axis(side=2, at=seq(0, 30, 2), label=seq(0, 30, 2), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 30, 2), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cVeg, #[MyOrder], 
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cVeg,
                 lty=c(1,3,rep(1, times=17)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,4,rep(2, times=17)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("1AB_cVeg_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1AB_cVeg_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
#legends_coord <- locator(1)
#print(legends_coord)
#dev.off()


############# Plot für die neue Legende only #############
png(filename="Legende_cveg_cland.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
plot(as.numeric(df_cVeg_SSP126$Ens_Mean)[1:86], lty=1, lwd=4,
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (17)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="", yaxt="n", ylim=c(0,300), cex.main=1, cex.lab=0.9, cex.axis=1,
     col = "transparent")
axis(side=2, at=seq(0, 30, 2)*10, label=c(0,"",40,"",80,"",120,"",160,"",200,"",240,"", 280,""), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 30, 2)*10, labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]-45
y = corners[4]-1
graphics::legend(x=x, y=y, legend=Models_cVeg_cLand, #[MyOrder], 
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cVeg_cLand,
                 lty=c(rep(1, times=20)),  #2xEns, 17xSingle Model                 
                 lwd=c(7,rep(4, times=19)), seg.len = 0.4,
                 ncol=1, cex=1, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.55,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.off()

####### 2. 2B: treeFrac SSP585 ######
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585") # um Namen für treeFracssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_treeFrac_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=2, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (15)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Tree Fraction [%]", yaxt="n", ylim=c(0,100), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_treeFrac_SSP585[1:86, 1]), col=rainbow_treeFrac[3],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 2]), col=rainbow_treeFrac[4],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 3]), col=rainbow_treeFrac[5],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 4]), col=rainbow_treeFrac[6],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 5]), col=rainbow_treeFrac[7],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 6]), col=rainbow_treeFrac[8],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 7]), col=rainbow_treeFrac[9],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 8]), col=rainbow_treeFrac[10],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 9]), col=rainbow_treeFrac[11],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 10]), col=rainbow_treeFrac[12],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 11]), col=rainbow_treeFrac[13],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 12]), col=rainbow_treeFrac[14],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 13]), col=rainbow_treeFrac[15],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 14]), col=rainbow_treeFrac[16],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 15]), col=rainbow_treeFrac[17],lty=1, lwd=1.5)


lines(as.numeric(df_treeFrac_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0, 100, 10), label=seq(0, 100, 10), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 100, 10), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_treeFrac[-1], #[MyOrder], [-1] heißt alle Elemente außer das erste (SSP126)
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_treeFrac[-1],
                 lty=c(1,rep(1, times=15)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,rep(2, times=15)), seg.len = 0.8,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.8,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("2B_treeFrac_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2B_treeFrac_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 2. 2A: treeFrac SSP126 ######
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP126") # um Namen für treeFracssp126 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_treeFrac_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (15)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Tree Fraction [%]", yaxt="n", ylim=c(0,100), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_treeFrac_SSP126[1:86, 1]), col=rainbow_treeFrac[3],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 2]), col=rainbow_treeFrac[4],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 3]), col=rainbow_treeFrac[5],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 4]), col=rainbow_treeFrac[6],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 5]), col=rainbow_treeFrac[7],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 6]), col=rainbow_treeFrac[8],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 7]), col=rainbow_treeFrac[9],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 8]), col=rainbow_treeFrac[10],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 9]), col=rainbow_treeFrac[11],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 10]), col=rainbow_treeFrac[12],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 11]), col=rainbow_treeFrac[13],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 12]), col=rainbow_treeFrac[14],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 13]), col=rainbow_treeFrac[15],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 14]), col=rainbow_treeFrac[16],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 15]), col=rainbow_treeFrac[17],lty=1, lwd=1.5)

lines(as.numeric(df_treeFrac_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0, 100, 10), label=seq(0, 100, 10), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 100, 10), labels=FALSE, las=1, tcl=0.3)
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_treeFrac[-2], #[MyOrder], [-1] heißt alle Elemente außer das erste (SSP126)
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_treeFrac[-2],
                 lty=c(1,rep(1, times=15)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,rep(2, times=15)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("2A_treeFrac_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2A_treeFrac_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)                                      

####### 2. 2AB: treeFrac SSP126 + 585 #####

setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585") # um Namen für treeFracssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_treeFrac_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (15)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Tree Fraction [%]", yaxt="n", ylim=c(0,100), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_treeFrac_SSP126[1:86, 1]), col=rainbow_treeFrac[3],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 2]), col=rainbow_treeFrac[4],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 3]), col=rainbow_treeFrac[5],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 4]), col=rainbow_treeFrac[6],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 5]), col=rainbow_treeFrac[7],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 6]), col=rainbow_treeFrac[8],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 7]), col=rainbow_treeFrac[9],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 8]), col=rainbow_treeFrac[10],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 9]), col=rainbow_treeFrac[11],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 10]), col=rainbow_treeFrac[12],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 11]), col=rainbow_treeFrac[13],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 12]), col=rainbow_treeFrac[14],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 13]), col=rainbow_treeFrac[15],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 14]), col=rainbow_treeFrac[16],lty=1, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP126[1:86, 15]), col=rainbow_treeFrac[17],lty=1, lwd=1.5)

lines(as.numeric(df_treeFrac_SSP585[1:86, 1]), col=rainbow_treeFrac[3],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 2]), col=rainbow_treeFrac[4],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 3]), col=rainbow_treeFrac[5],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 4]), col=rainbow_treeFrac[6],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 5]), col=rainbow_treeFrac[7],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 6]), col=rainbow_treeFrac[8],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 7]), col=rainbow_treeFrac[9],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 8]), col=rainbow_treeFrac[10],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 9]), col=rainbow_treeFrac[11],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 10]), col=rainbow_treeFrac[12],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 11]), col=rainbow_treeFrac[13],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 12]), col=rainbow_treeFrac[14],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 13]), col=rainbow_treeFrac[15],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 14]), col=rainbow_treeFrac[16],lty=2, lwd=1.5)
lines(as.numeric(df_treeFrac_SSP585[1:86, 15]), col=rainbow_treeFrac[17],lty=2, lwd=1.5)

lines(as.numeric(df_treeFrac_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_treeFrac_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=3, lwd=4)
axis(side=2, at=seq(0, 100, 10), label=seq(0, 100, 10), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 100, 10), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_treeFrac, #[MyOrder], 
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_treeFrac,
                 lty=c(1,3,rep(1, times=15)),  #2xEns, 17xSingle Model                 
                 lwd=c(4,4,rep(2, times=15)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("2AB_treeFrac_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2AB_treeFrac_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 3. 3: cVeg SSP585-BGC  ####
png(filename="3_cVeg_SSP585-BGC.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_ssp585_bgc/UKESM1-0-LL/cVeg") # um Namen für treeFracssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(`df_cVeg_SSP585-BGC`$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585-BGC //", "MODEL ENSEMBLE (5)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="", yaxt="n", ylim=c(0,300), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(`df_cVeg_SSP585-BGC`[1:86, 1]), col=rainbow_cVegBGC[2],lty=1, lwd=1.5)
lines(as.numeric(`df_cVeg_SSP585-BGC`[1:86, 2]), col=rainbow_cVegBGC[3],lty=1, lwd=1.5)
lines(as.numeric(`df_cVeg_SSP585-BGC`[1:86, 3]), col=rainbow_cVegBGC[4],lty=1, lwd=1.5)
lines(as.numeric(`df_cVeg_SSP585-BGC`[1:86, 4]), col=rainbow_cVegBGC[5],lty=1, lwd=1.5)
lines(as.numeric(`df_cVeg_SSP585-BGC`[1:86, 5]), col=rainbow_cVegBGC[6],lty=1, lwd=1.5)

lines(as.numeric(`df_cVeg_SSP585-BGC`$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0, 30, 2)*10, label=c(0,"",40,"",80,"",120,"",160,"",200,"",240,"", 280,""), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 30, 2)*10, labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cVegBGC, #[MyOrder], [-1] heißt alle Elemente außer das erste (SSP126)
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cVegBGC,
                 lty=c(3,rep(1, times=5)),  #1xEns, 5xSingle Model                 
                 lwd=c(4,rep(2, times=5)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### 4. 4: treeFrac SSP585-BGC ####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_ssp585_bgc/UKESM1-0-LL/treeFrac") # um Namen für treeFracssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(`df_treeFrac_SSP585-BGC`$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \n SSP585-BGC //", "MODEL ENSEMBLE (5)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Tree Fraction [%]", yaxt="n", ylim=c(0,100), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(`df_treeFrac_SSP585-BGC`[1:86, 1]), col=rainbow_treeFracBGC[2],lty=1, lwd=1.5)
lines(as.numeric(`df_treeFrac_SSP585-BGC`[1:86, 2]), col=rainbow_treeFracBGC[3],lty=1, lwd=1.5)

lines(as.numeric(`df_treeFrac_SSP585-BGC`$Ens_Mean)[1:86], col=col_Ensmean,lty=2, lwd=4)
axis(side=2, at=seq(0, 100, 10), label=seq(0, 100, 10), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 100, 10), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_treeFracBGC, #[MyOrder], [-1] heißt alle Elemente außer das erste (SSP126)
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_treeFracBGC,
                 lty=c(3,rep(1, times=2)),  #1xEns, 5xSingle Model                 
                 lwd=c(4,rep(2, times=2)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)

dev.print(jpeg, file = paste("4_treeFrac_SSP585-BGC.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("4_treeFrac_SSP585-BGC_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 5. 5A: cLand SSP126 ####
png(filename="5A_cLand_SSP126.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/cLand/SSP126") # um Namen für cLandssp126 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cLand_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (10)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Total Terrestrial Carbon [MgC/ha]", yaxt="n", ylim=c(0,500), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cLand_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)

lines(as.numeric(df_cLand_SSP126[1:86, 1]), col=rainbow_cLand_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 2]), col=rainbow_cLand_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 3]), col=rainbow_cLand_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 4]), col=rainbow_cLand_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 5]), col=rainbow_cLand_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 6]), col=rainbow_cLand_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 7]), col=rainbow_cLand_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 8]), col=rainbow_cLand_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 9]), col=rainbow_cLand_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 10]), col=rainbow_cLand_ssp1[12],lty=1, lwd=1.5)

axis(side=2, at=seq(0,50, 4)*10, label=c(0,"",80,"",160,"",240,"",320,"",400,"",480), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0,50, 4)*10, labels=FALSE, las=1, tcl=0.3)
#dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cLand_ssp1[-2], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cLand_ssp1[-2],
                 lty=c(1,rep(1, times=10)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=10)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("5A_cLand_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5A_cLand_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 5. 5B: cLand SSP585 ####
png(filename="5B_cLand_SSP585.png", 
    type="cairo",
    units="in", 
    width=5, 
    height=5, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/cLand/SSP585") # um Namen für cLandssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.5,0.05))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cLand_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (11)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="Total Terrestrial Carbon [MgC/ha]", yaxt="n", ylim=c(0,500), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cLand_SSP585[1:86, 1]), col=rainbow_cLand[3],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 2]), col=rainbow_cLand[4],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 3]), col=rainbow_cLand[5],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 4]), col=rainbow_cLand[6],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 5]), col=rainbow_cLand[7],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 6]), col=rainbow_cLand[8],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 7]), col=rainbow_cLand[9],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 8]), col=rainbow_cLand[10],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 9]), col=rainbow_cLand[11],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 10]), col=rainbow_cLand[12],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 11]), col=rainbow_cLand[13],lty=1, lwd=1.5)

lines(as.numeric(df_cLand_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0,50, 4)*10, label=c(0,"",80,"",160,"",240,"",320,"",400,"",480), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0,50, 4)*10, labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cLand[-2], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cLand[-2],
                 lty=c(3,rep(1, times=10)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=10)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("5B_cLand_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5B_cLand_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 5. 5AB: cLand SSP126 + SSP585 ####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/cLand/SSP585") # um Namen für cLandssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_cLand_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (11)", sep= " "),
     las=1, xlab="", xaxt="n", ylab="cLand [kgC/m2]", yaxt="n", ylim=c(0,50), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_cLand_SSP126[1:86, 1]), col=rainbow_cLand[3],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 2]), col=rainbow_cLand[4],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 3]), col=rainbow_cLand[5],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 4]), col=rainbow_cLand[6],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 5]), col=rainbow_cLand[7],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 6]), col=rainbow_cLand[8],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 7]), col=rainbow_cLand[9],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 8]), col=rainbow_cLand[10],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 9]), col=rainbow_cLand[11],lty=1, lwd=1.5)
lines(as.numeric(df_cLand_SSP126[1:86, 10]), col=rainbow_cLand[12],lty=1, lwd=1.5)

lines(as.numeric(df_cLand_SSP585[1:86, 1]), col=rainbow_cLand[3],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 2]), col=rainbow_cLand[4],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 3]), col=rainbow_cLand[5],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 4]), col=rainbow_cLand[6],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 5]), col=rainbow_cLand[7],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 6]), col=rainbow_cLand[8],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 7]), col=rainbow_cLand[9],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 8]), col=rainbow_cLand[10],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 9]), col=rainbow_cLand[11],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 10]), col=rainbow_cLand[12],lty=2, lwd=1.5)
lines(as.numeric(df_cLand_SSP585[1:86, 11]), col=rainbow_cLand[13],lty=2, lwd=1.5)

lines(as.numeric(df_cLand_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_cLand_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=3, lwd=4)
axis(side=2, at=seq(0,50, 4), label=seq(0,50, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0,50, 4), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_cLand, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_cLand,
                 lty=c(1,3,rep(1, times=11)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,4,rep(2, times=11)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("5AB_cLand_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5AB_cLand_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### 6. 6A: gpp SSP126####
png(filename="6A_GPP_SSP126.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/gpp/SSP126") # um Namen für gppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_gpp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (18)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(14,66), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_gpp_SSP126[1:86, 1]), col=rainbow_gpp_ssp1[2],lty=1, lwd=2)
lines(as.numeric(df_gpp_SSP126[1:86, 2]), col=rainbow_gpp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 3]), col=rainbow_gpp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 4]), col=rainbow_gpp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 5]), col=rainbow_gpp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 6]), col=rainbow_gpp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 7]), col=rainbow_gpp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 8]), col=rainbow_gpp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 9]), col=rainbow_gpp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 10]), col=rainbow_gpp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 11]), col=rainbow_gpp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 12]), col=rainbow_gpp_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 13]), col=rainbow_gpp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 14]), col=rainbow_gpp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 15]), col=rainbow_gpp_ssp1[16],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 16]), col=rainbow_gpp_ssp1[17],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 17]), col=rainbow_gpp_ssp1[18],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 18]), col=rainbow_gpp_ssp1[19],lty=1, lwd=1.5)

lines(as.numeric(df_gpp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(14,66, 4), label=seq(14,66, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(14,66, 4), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_gpp_ssp1, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_gpp_ssp1,
                 lty=c(1,rep(1, times=18)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=18)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("6A_gpp_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6A_gpp_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 6. 6B: gpp SSP585####
png(filename="6B_GPP_SSP585.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/gpp/SSP585") # um Namen für gppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_gpp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (20)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(14,66), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_gpp_SSP585[1:86, 1]), col=rainbow_gpp[2],lty=1, lwd=2)
lines(as.numeric(df_gpp_SSP585[1:86, 2]), col=rainbow_gpp[3],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 3]), col=rainbow_gpp[4],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 4]), col=rainbow_gpp[5],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 5]), col=rainbow_gpp[6],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 6]), col=rainbow_gpp[7],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 7]), col=rainbow_gpp[8],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 8]), col=rainbow_gpp[9],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 9]), col=rainbow_gpp[10],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 10]), col=rainbow_gpp[11],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 11]), col=rainbow_gpp[12],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 12]), col=rainbow_gpp[13],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 13]), col=rainbow_gpp[14],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 14]), col=rainbow_gpp[15],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 15]), col=rainbow_gpp[16],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 16]), col=rainbow_gpp[17],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 17]), col=rainbow_gpp[18],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 18]), col=rainbow_gpp[19],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 19]), col=rainbow_gpp[21],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 20]), col=rainbow_gpp[22],lty=1, lwd=1.5)


lines(as.numeric(df_gpp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(14,66, 4), label=seq(14,66, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(14,66, 4), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_gpp[-1], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_gpp[-1],
                 lty=c(3,rep(1, times=20)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=20)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("6B_gpp_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6B_gpp_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 6. 6AB: gpp SSP126 + 585 ####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/gpp/SSP585") # um Namen für gppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")

png(filename="Legende_GPP.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
par(mai=c(0,0,0,2))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_gpp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (20)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(14,66), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_gpp_SSP126[1:86, 1]), col=rainbow_gpp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 2]), col=rainbow_gpp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 3]), col=rainbow_gpp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 4]), col=rainbow_gpp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 5]), col=rainbow_gpp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 6]), col=rainbow_gpp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 7]), col=rainbow_gpp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 8]), col=rainbow_gpp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 9]), col=rainbow_gpp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 10]), col=rainbow_gpp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 11]), col=rainbow_gpp_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 12]), col=rainbow_gpp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 13]), col=rainbow_gpp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 14]), col=rainbow_gpp_ssp1[16],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 15]), col=rainbow_gpp_ssp1[17],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 16]), col=rainbow_gpp_ssp1[18],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 17]), col=rainbow_gpp_ssp1[19],lty=1, lwd=1.5)
lines(as.numeric(df_gpp_SSP126[1:86, 18]), col=rainbow_gpp_ssp1[20],lty=1, lwd=1.5)

lines(as.numeric(df_gpp_SSP585[1:86, 1]), col=rainbow_gpp[3],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 2]), col=rainbow_gpp[4],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 3]), col=rainbow_gpp[5],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 4]), col=rainbow_gpp[6],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 5]), col=rainbow_gpp[7],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 6]), col=rainbow_gpp[8],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 7]), col=rainbow_gpp[9],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 8]), col=rainbow_gpp[10],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 9]), col=rainbow_gpp[11],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 10]), col=rainbow_gpp[12],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 11]), col=rainbow_gpp[13],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 12]), col=rainbow_gpp[14],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 13]), col=rainbow_gpp[15],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 14]), col=rainbow_gpp[16],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 15]), col=rainbow_gpp[17],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 16]), col=rainbow_gpp[18],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 17]), col=rainbow_gpp[19],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 18]), col=rainbow_gpp[20],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 19]), col=rainbow_gpp[21],lty=2, lwd=1.5)
lines(as.numeric(df_gpp_SSP585[1:86, 20]), col=rainbow_gpp[22],lty=2, lwd=1.5)

lines(as.numeric(df_gpp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_gpp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=2, lwd=4)
axis(side=2, at=seq(14,66, 4), label=seq(14,66, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(14,66, 4), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]-45
y = corners[4]-2
graphics::legend(x=x, y=y, legend=Models_gpp, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_gpp,
                 lty=c(1,rep(1, times=20)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(7,5,rep(4, times=19)), 
                 seg.len = 1.3,
                 ncol=1, cex=0.8, #border='grey95', 
                 bg='white', 
                 box.col = 'white',
                 x.intersp = 0.8, # adjust character interspacing as you like to effect box width
                 y.intersp = 1,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.off()
dev.print(jpeg, file = paste("6AB_gpp_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6AB_gpp_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### 7. 7A: npp SSP126####
png(filename="7A_NPP_SSP126.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/npp/SSP126") # um Namen für nppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_npp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (18)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(0,48), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_npp_SSP126[1:86, 1]), col=rainbow_npp_ssp1[2],lty=1, lwd=2)
lines(as.numeric(df_npp_SSP126[1:86, 2]), col=rainbow_npp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 3]), col=rainbow_npp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 4]), col=rainbow_npp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 5]), col=rainbow_npp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 6]), col=rainbow_npp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 7]), col=rainbow_npp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 8]), col=rainbow_npp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 9]), col=rainbow_npp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 10]), col=rainbow_npp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 11]), col=rainbow_npp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 12]), col=rainbow_npp_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 13]), col=rainbow_npp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 14]), col=rainbow_npp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 15]), col=rainbow_npp_ssp1[16],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 16]), col=rainbow_npp_ssp1[17],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 17]), col=rainbow_npp_ssp1[18],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 18]), col=rainbow_npp_ssp1[19],lty=1, lwd=1.5)

lines(as.numeric(df_npp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0, 48, 4), label=seq(0, 48, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 48, 4), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_npp_ssp1[-2], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_npp_ssp1[-2],
                 lty=c(1,rep(1, times=18)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=18)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("7A_npp_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7A_npp_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 7. 7B: npp SSP585####
png(filename="7B_NPP_SSP585.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/npp/SSP585") # um Namen für nppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_npp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (20)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(0,48), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_npp_SSP585[1:86, 1]), col=rainbow_npp[2],lty=1, lwd=2)
lines(as.numeric(df_npp_SSP585[1:86, 2]), col=rainbow_npp[3],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 3]), col=rainbow_npp[4],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 4]), col=rainbow_npp[5],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 5]), col=rainbow_npp[6],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 6]), col=rainbow_npp[7],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 7]), col=rainbow_npp[8],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 8]), col=rainbow_npp[9],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 9]), col=rainbow_npp[10],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 10]), col=rainbow_npp[11],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 11]), col=rainbow_npp[12],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 12]), col=rainbow_npp[13],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 13]), col=rainbow_npp[14],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 14]), col=rainbow_npp[15],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 15]), col=rainbow_npp[16],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 16]), col=rainbow_npp[17],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 17]), col=rainbow_npp[18],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 18]), col=rainbow_npp[19],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 19]), col=rainbow_npp[21],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 20]), col=rainbow_npp[22],lty=1, lwd=1.5)


lines(as.numeric(df_npp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(0, 48, 4), label=seq(0, 48, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 48, 4), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_npp[-1], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_npp[-1],
                 lty=c(3,rep(1, times=20)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=20)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("7B_npp_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7B_npp_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 7. 7AB: npp SSP126 + 585 ####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/npp/SSP585") # um Namen für nppssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = TRUE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_npp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (20)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(0,48), cex.main=1, cex.lab=0.9, cex.axis=1) 
lines(as.numeric(df_npp_SSP126[1:86, 1]), col=rainbow_npp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 2]), col=rainbow_npp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 3]), col=rainbow_npp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 4]), col=rainbow_npp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 5]), col=rainbow_npp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 6]), col=rainbow_npp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 7]), col=rainbow_npp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 8]), col=rainbow_npp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 9]), col=rainbow_npp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 10]), col=rainbow_npp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 11]), col=rainbow_npp_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 12]), col=rainbow_npp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 13]), col=rainbow_npp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 14]), col=rainbow_npp_ssp1[16],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 15]), col=rainbow_npp_ssp1[17],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 16]), col=rainbow_npp_ssp1[18],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 17]), col=rainbow_npp_ssp1[19],lty=1, lwd=1.5)
lines(as.numeric(df_npp_SSP126[1:86, 18]), col=rainbow_npp_ssp1[20],lty=1, lwd=1.5)

lines(as.numeric(df_npp_SSP585[1:86, 1]), col=rainbow_npp[3],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 2]), col=rainbow_npp[4],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 3]), col=rainbow_npp[5],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 4]), col=rainbow_npp[6],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 5]), col=rainbow_npp[7],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 6]), col=rainbow_npp[8],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 7]), col=rainbow_npp[9],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 8]), col=rainbow_npp[10],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 9]), col=rainbow_npp[11],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 10]), col=rainbow_npp[12],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 11]), col=rainbow_npp[13],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 12]), col=rainbow_npp[14],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 13]), col=rainbow_npp[15],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 14]), col=rainbow_npp[16],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 15]), col=rainbow_npp[17],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 16]), col=rainbow_npp[18],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 17]), col=rainbow_npp[19],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 18]), col=rainbow_npp[20],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 19]), col=rainbow_npp[21],lty=2, lwd=1.5)
lines(as.numeric(df_npp_SSP585[1:86, 20]), col=rainbow_npp[22],lty=2, lwd=1.5)

lines(as.numeric(df_npp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_npp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=3, lwd=4)
axis(side=2, at=seq(0, 48, 4), label=seq(0, 48, 4), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(0, 48, 4), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_npp, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_npp,
                 lty=c(1,3,rep(1, times=20)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,4,rep(2, times=20)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("7AB_npp_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7AB_npp_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### 8. 8A: nep SSP126####
png(filename="8A_NEP_SSP126.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nep/SSP126") # um Namen für nepssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nep_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (11)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nep_SSP126[1:86, 1]), col=rainbow_nep_ssp1[2],lty=1, lwd=2)
lines(as.numeric(df_nep_SSP126[1:86, 2]), col=rainbow_nep_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 3]), col=rainbow_nep_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 4]), col=rainbow_nep_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 5]), col=rainbow_nep_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 6]), col=rainbow_nep_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 7]), col=rainbow_nep_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 8]), col=rainbow_nep_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 9]), col=rainbow_nep_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 10]), col=rainbow_nep_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 11]), col=rainbow_nep_ssp1[12],lty=1, lwd=1.5)

lines(as.numeric(df_nep_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_nep_ssp1[-2], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nep_ssp1[-2],
                 lty=c(1,rep(1, times=11)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=11)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("8A_nep_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8A_nep_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### 8. 8B: nep SSP585####
png(filename="8B_NEP_SSP585.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nep/SSP585") # um Namen für nepssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nep_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (13)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nep_SSP585[1:86, 1]), col=rainbow_nep[2],lty=1, lwd=2)
lines(as.numeric(df_nep_SSP585[1:86, 2]), col=rainbow_nep[3],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 3]), col=rainbow_nep[4],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 4]), col=rainbow_nep[5],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 5]), col=rainbow_nep[6],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 6]), col=rainbow_nep[7],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 7]), col=rainbow_nep[8],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 8]), col=rainbow_nep[9],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 9]), col=rainbow_nep[10],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 10]), col=rainbow_nep[11],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 11]), col=rainbow_nep[12],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 12]), col=rainbow_nep[13],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 13]), col=rainbow_nep[14],lty=1, lwd=1.5)


lines(as.numeric(df_nep_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_nep[-1], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nep[-1],
                 lty=c(3,rep(1, times=13)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=13)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("8B_nep_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8B_nep_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 8. 8AB: nep SSP126 + 585 ####
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nep/SSP126") # um Namen für nepssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,1.7))
par("oma" = c(0,0,0,1.4)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nep_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 + SSP585 //", "MODEL ENSEMBLE (13)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nep_SSP126[1:86, 1]), col=rainbow_nep_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 2]), col=rainbow_nep_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 3]), col=rainbow_nep_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 4]), col=rainbow_nep_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 5]), col=rainbow_nep_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 6]), col=rainbow_nep_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 7]), col=rainbow_nep_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 8]), col=rainbow_nep_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 9]), col=rainbow_nep_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 10]), col=rainbow_nep_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_nep_SSP126[1:86, 11]), col=rainbow_nep_ssp1[13],lty=1, lwd=1.5)

lines(as.numeric(df_nep_SSP585[1:86, 1]), col=rainbow_nep[3],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 2]), col=rainbow_nep[4],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 3]), col=rainbow_nep[5],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 4]), col=rainbow_nep[6],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 5]), col=rainbow_nep[7],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 6]), col=rainbow_nep[8],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 7]), col=rainbow_nep[9],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 8]), col=rainbow_nep[10],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 9]), col=rainbow_nep[11],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 10]), col=rainbow_nep[12],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 11]), col=rainbow_nep[13],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 12]), col=rainbow_nep[14],lty=2, lwd=1.5)
lines(as.numeric(df_nep_SSP585[1:86, 13]), col=rainbow_nep[15],lty=2, lwd=1.5)

lines(as.numeric(df_nep_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_nep_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=2, lwd=4)
axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_nep, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nep,
                 lty=c(1,3,rep(1, times=13)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,4,rep(2, times=13)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("8AB_nep_SSP126_585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8AB_nep_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### 9. 9A: nbp SSP126####
png(filename="9A_NBP_SSP126.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nbp/SSP126") # um Namen für nbpssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nbp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP126 //", "MODEL ENSEMBLE (14)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nbp_SSP126[1:86, 1]), col=rainbow_nbp_ssp1[2],lty=1, lwd=2)
lines(as.numeric(df_nbp_SSP126[1:86, 2]), col=rainbow_nbp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 3]), col=rainbow_nbp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 4]), col=rainbow_nbp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 5]), col=rainbow_nbp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 6]), col=rainbow_nbp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 7]), col=rainbow_nbp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 8]), col=rainbow_nbp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 9]), col=rainbow_nbp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 10]), col=rainbow_nbp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 11]), col=rainbow_nbp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 12]), col=rainbow_nbp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 13]), col=rainbow_nbp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 14]), col=rainbow_nbp_ssp1[16],lty=1, lwd=1.5)

lines(as.numeric(df_nbp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)
dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]+0.15
y = corners[4]#-4
graphics::legend(x=x, y=y, legend=Models_nbp_ssp1[-2], #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nbp_ssp1[-2],
                 lty=c(1,rep(1, times=14)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(4,rep(2, times=14)), seg.len = 0.7,
                 ncol=1, cex=0.7, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.15, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.65,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("9A_nbp_SSP126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9A_nbp_SSP126_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 9. 9B: nbp SSP585####
png(filename="9B_NBP_SSP585.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nbp/SSP585") # um Namen für nbpssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nbp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     #main= paste("Mean yearly", variable, "in the Amazon biome \nSSP585 //", "MODEL ENSEMBLE (16)", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nbp_SSP585[1:86, 1]), col=rainbow_nbp[2],lty=1, lwd=2)
lines(as.numeric(df_nbp_SSP585[1:86, 2]), col=rainbow_nbp[3],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 3]), col=rainbow_nbp[4],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 4]), col=rainbow_nbp[5],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 5]), col=rainbow_nbp[6],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 6]), col=rainbow_nbp[7],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 7]), col=rainbow_nbp[8],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 8]), col=rainbow_nbp[9],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 9]), col=rainbow_nbp[10],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 10]), col=rainbow_nbp[11],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 11]), col=rainbow_nbp[12],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 12]), col=rainbow_nbp[13],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 13]), col=rainbow_nbp[14],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 14]), col=rainbow_nbp[15],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 15]), col=rainbow_nbp[16],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 16]), col=rainbow_nbp[17],lty=1, lwd=1.5)

lines(as.numeric(df_nbp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)
#dev.off()

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]-55
y = corners[4]
graphics::legend(x=x, y=y, legend=Models_nbp, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nbp,
                 lty=c(1,rep(1, times=16)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(7,5,rep(4, times=15)), 
                 seg.len = 1.3,
                 ncol=1, cex=0.8, #border='grey95', 
                 bg='white', 
                 box.col = 'white',
                 x.intersp = 0.8, # adjust character interspacing as you like to effect box width
                 y.intersp = 1.3,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.print(jpeg, file = paste("9B_nbp_SSP585.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9B_nbp_SSP585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 9. 9AB: nbp SSP126 + 585 ####

setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon/ACCESS-ESM1-5/nbp/SSP126") # um Namen für nbpssp585 zu bekommen
WD = getwd()
nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
filename <- as.character(nc_list[1]) # durch 201501 wird einfach (nur) der erste Dateiname ausgewählt, weil die erste (und ggfs. einzige) Datei immer mit diesem Datum startet.
variable <- sapply(strsplit(filename, "_"), `[`, 1) 
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
png(filename="Legende_NEP_NBP.png", 
    type="cairo",
    units="in", 
    width=8, 
    height=6, 
    pointsize=12, 
    res=600)
par(mai=c(0.5,0.9,0.8,0.5))
par("oma" = c(0,0,0,0)) # Set right margin
par(xpd = FALSE) #Draw outside plot area
# to reset par(oma) and other par -> dev.off()
plot(as.numeric(df_nbp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4, type="n",
     main= paste("fuck it", sep= " "),
     las=1, xlab="", xaxt="n", ylab=expression('Mg C ha'^-1*' yr'^-1), yaxt="n", ylim=c(-5, 5), cex.main=1, cex.lab=0.9, cex.axis=1) 
abline(h=0, col='grey65')
lines(as.numeric(df_nbp_SSP126[1:86, 1]), col=rainbow_nbp_ssp1[3],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 2]), col=rainbow_nbp_ssp1[4],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 3]), col=rainbow_nbp_ssp1[5],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 4]), col=rainbow_nbp_ssp1[6],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 5]), col=rainbow_nbp_ssp1[7],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 6]), col=rainbow_nbp_ssp1[8],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 7]), col=rainbow_nbp_ssp1[9],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 8]), col=rainbow_nbp_ssp1[10],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 9]), col=rainbow_nbp_ssp1[11],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 10]), col=rainbow_nbp_ssp1[12],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 11]), col=rainbow_nbp_ssp1[13],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 12]), col=rainbow_nbp_ssp1[14],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 13]), col=rainbow_nbp_ssp1[15],lty=1, lwd=1.5)
lines(as.numeric(df_nbp_SSP126[1:86, 14]), col=rainbow_nbp_ssp1[16],lty=1, lwd=1.5)

lines(as.numeric(df_nbp_SSP585[1:86, 1]), col=rainbow_nbp[3],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 2]), col=rainbow_nbp[4],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 3]), col=rainbow_nbp[5],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 4]), col=rainbow_nbp[6],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 5]), col=rainbow_nbp[7],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 6]), col=rainbow_nbp[8],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 7]), col=rainbow_nbp[9],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 8]), col=rainbow_nbp[10],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 9]), col=rainbow_nbp[11],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 10]), col=rainbow_nbp[12],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 11]), col=rainbow_nbp[13],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 12]), col=rainbow_nbp[14],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 13]), col=rainbow_nbp[15],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 14]), col=rainbow_nbp[16],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 15]), col=rainbow_nbp[17],lty=2, lwd=1.5)
lines(as.numeric(df_nbp_SSP585[1:86, 16]), col=rainbow_nbp[18],lty=2, lwd=1.5)

lines(as.numeric(df_nbp_SSP126$Ens_Mean)[1:86], col=col_Ensmean,lty=1, lwd=4)
lines(as.numeric(df_nbp_SSP585$Ens_Mean)[1:86], col=col_Ensmean,lty=2, lwd=4)

axis(side=2, at=seq(-5, 5,1), label=seq(-5, 5,1), las=1)
axis(side=1, at=seq(1, 86,10), labels=seq(2015,2100,10))
axis(side=4, at=seq(-5, 5,1), labels=FALSE, las=1, tcl=0.3)

par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
x = corners[2]-45
y = corners[4]
graphics::legend(x=x, y=y, legend=Models_nbp_nep, #[MyOrder], [-2 ist minus ssp585]
                 #fill=rainbow[MyOrder] ,
                 col=rainbow_nbp_nep,
                 lty=c(1,rep(1, times=17)),  #2xEns, 17xSingle Model, 3 ist gestrichlt, 1 ist durchgezogen                 
                 lwd=c(7,5,rep(4, times=16)), seg.len = 0.8,
                 ncol=1, cex=0.75, #border='grey95', 
                 #bg='grey95', 
                 box.col = FALSE,
                 x.intersp = 0.8, # adjust character interspacing as you like to effect box width
                 y.intersp = 0.95,  # adjust character interspacing to effect box height
                 #adj = c(0, 0.5),
                 plot = TRUE)
dev.off()
dev.print(jpeg, file = paste("9AB_nbp_SSP585_126.jpg",sep="_"), 
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9AB_nbp_SSP126_585_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

##### DIFFERENCE MAP B1=absolute change #######
####### 1. 1A: cVeg SSP126 #####
####### abschange #####

all_objects <- ls()
list126_abschange <- grep("cVeg.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,rs126_16,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10 + rs126_11 + rs126_12 +
                                               rs126_13 + rs126_14 + rs126_15 +
                                               rs126_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP126_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean cVeg change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-6,16,2),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1A_cVeg_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange #####

all_objects <- ls()
list126_relchange <- grep("cVeg.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,rs126_16,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10 + rs126_11 + rs126_12 +
                                               rs126_13 + rs126_14 + rs126_15 +
                                               rs126_16) /16

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP126_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cVeg change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1A_cVeg_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)





####### 1. 1B: cVeg SSP585 #####
####### abschange #####
all_objects <- ls()
list585_abschange <- grep("cVeg.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,rs585_16,rs585_17,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5 + rs585_6 +
                                               rs585_7 + rs585_8 + rs585_9 +
                                               rs585_10 + rs585_11 + rs585_12 +
                                               rs585_13 + rs585_14 + rs585_15 +
                                               rs585_16 + rs585_17) /17
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP585_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean cVeg change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (17)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-6,16,2),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1B_cVeg_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #####

all_objects <- ls()
list585_relchange <- grep("cVeg.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,rs585_16,rs585_17,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5 + rs585_6 +
                                               rs585_7 + rs585_8 + rs585_9 +
                                               rs585_10 + rs585_11 + rs585_12 +
                                               rs585_13 + rs585_14 + rs585_15 +
                                               rs585_16 + rs585_17) /17

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP585_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cVeg change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,580),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1B_cVeg_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### 2. 2A: treeFrac SSP126 #####
####### abschange ######
all_objects <- ls()
list126_abschange <- grep("treeFrac.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
treeFrac_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                                   rs126_4 + rs126_5 + rs126_6 +
                                                   rs126_7 + rs126_8 + rs126_9 +
                                                   rs126_10 + rs126_11 + rs126_12 +
                                                   rs126_13 + rs126_14 + rs126_15) /15

#neu
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(treeFrac_SSP126_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean treeFrac change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (15)"),
     breaks=seq(-12,10,2),
     col=RdYlGn11,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
dev.print(jpeg, paste("2A_treeFrac_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2A_treeFrac_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 2. 2B: treeFrac SSP585 #####
####### absschange #####
all_objects <- ls()
list585_abschange <- grep("treeFrac.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
treeFrac_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5 + rs585_6 +
                                               rs585_7 + rs585_8 + rs585_9 +
                                               rs585_10 + rs585_11 + rs585_12 +
                                               rs585_13 + rs585_14 + rs585_15) /15

#neu
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(treeFrac_SSP585_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean treeFrac change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (15)"),
     breaks=seq(-12,10,2),
     col=RdYlGn11,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
dev.print(jpeg, paste("2B_treeFrac_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2B_treeFrac_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 3. 3: cVeg SSP585-BGC  ####
####### abschange ##### 
all_objects <- ls()
list585_abschange <- grep("cVeg.*SSP585-BGC.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
'cVeg_SSP585-BGC_ENSEMBLE_abschange1530_85100' <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5) /5
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(`cVeg_SSP585-BGC_ENSEMBLE_abschange1530_85100`, 
     main= paste("Mean cVeg change // SSP585-BGC\n2015-2030 vs. 2085-2100 // ENSEMBLE (5)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-6,16,2),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585-BGC_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange #####
all_objects <- ls()
list585_relchange <- grep("cVeg.*SSP585-BGC.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
'cVeg_SSP585-BGC_ENSEMBLE_relchange1530_85100' <- (rs585_1 + rs585_2 + rs585_3 +
                                                     rs585_4 + rs585_5) /5
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(`cVeg_SSP585-BGC_ENSEMBLE_relchange1530_85100`, 
     main= paste("Mean cVeg change // SSP585-BGC\n2015-2030 vs. 2085-2100 // ENSEMBLE (5)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,2200),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585-BGC_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)





####### 4. 4: treeFrac SSP585-BGC ######
####### abschange ######
all_objects <- ls()
list585_abschange <- grep("treeFrac.*SSP585-BGC.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
treeFrac_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2) /2

#neu
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(treeFrac_SSP585_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean treeFrac change // SSP585-BGC\n2015-2030 vs. 2085-2100 // ENSEMBLE (2)"),
     breaks=seq(-12,10,2),
     col=RdYlGn11,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
dev.print(jpeg, paste("4_treeFrac_SSP58-BGC5_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("4_treeFrac_SSP58-BGC5_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 5. 5A: cLand SSP126 #####
####### abschange #####
all_objects <- ls()
list126_abschange <- grep("cLand.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10) /10
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP126_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean cLand change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (10)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-6,16,2),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5A_cLand_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5A_cLand_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange ########
all_objects <- ls()
list126_relchange <- grep("cLand.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10) /10

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP126_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cLand change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (10)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.pri
nt(jpeg, paste("5A_cLand_SSP126_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5A_cLand_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 5. 5B: cLand SSP585 #####
####### abschange #######
all_objects <- ls()
list585_abschange <- grep("CLAND.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                                rs585_4 + rs585_5 + rs585_6 +
                                                rs585_7 + rs585_8 + rs585_9 +
                                                rs585_10 + rs585_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP585_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean cLand change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-6,16,2),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[kgC/m2]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5B_cLand_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #######
all_objects <- ls()
list585_relchange <- grep("cLand.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                                rs585_4 + rs585_5 + rs585_6 +
                                                rs585_7 + rs585_8 + rs585_9 +
                                                rs585_10 + rs585_11) /11

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP585_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cLand change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_relchange1530_85100.jpg"),
   quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5B_cLand_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 6. 6A: GPP SSP126 ######
####### abschange #######
all_objects <- ls()
list126_abschange <- grep("GPP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_abschange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_abschange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                                rs126_4 + rs126_5 + rs126_6 +
                                                rs126_7 + rs126_8 + rs126_9 +
                                                rs126_10 + rs126_11 + rs126_12 +
                                                rs126_13 + rs126_14 + rs126_15 + 
                                                rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     col=RdYlGn12,
     breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_gpp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6A_gpp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### relchange #######
all_objects <- ls()
list126_relchange <- grep("GPP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_relchange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_relchange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_gpp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6A_gpp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 6. 6B: GPP SSP585 ######
####### abschange ######
all_objects <- ls()
list585_abschange <- grep("GPP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_abschange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_abschange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_abschange[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP585_ENSEMBLE_abschange1530_85100*((60*60*24*(365/12)*10000)/1000), # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (20)"),
     col=RdYlGn12,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10)*((60*60*24*(365/12)*10000)/1000),
     breaks=seq(-15,15,2.5),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_gpp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6B_gpp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange ######
all_objects <- ls()
list585_relchange <- grep("GPP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_relchange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_relchange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_relchange[20])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     #breaks=seq(-90,240,30),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_gpp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6B_gpp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 7. 7A: NPP SSP126 #######
####### abschange ######
all_objects <- ls()
list126_abschange <- grep("NPP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_abschange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_abschange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     col=RdYlGn12,
     breaks=round(seq(-3e-07, 3e-07,0.5e-07), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in npp \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7A_npp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #######
all_objects <- ls()
list126_relchange <- grep("NPP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_relchange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_relchange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in npp \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7A_npp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 7. 7B: NPP SSP585 #######
####### abschange #######
all_objects <- ls()
list585_abschange <- grep("NPP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_abschange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_abschange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_abschange[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
npp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP585_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (20)"),
     col=RdYlGn12,
     breaks=round(seq(-3e-07, 3e-07,0.5e-07), digits = 10),
     #breaks=round(seq(-4.8e-08, 4.8e-08,8e-09), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in npp \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7B_npp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### relchange #######
all_objects <- ls()
list585_relchange <- grep("NPP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_relchange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_relchange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_relchange[20])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
npp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     #breaks=seq(-90,240,30),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in npp \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7B_npp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### 8. 8A: NEP SSP126 #######
####### abschange ########
all_objects <- ls()
list126_abschange <- grep("NEP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nep_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #col=RdYlGn,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
     breaks=round(seq(-10e-08, 10e-08,2e-08), digits = 10),
     #breaks=round(seq(-3e-08, 3e-08,0.5e-08), digits = 10),
     col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nep \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_nep_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8A_nep_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange ########
all_objects <- ls()
list126_relchange <- grep("NEP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nep_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nep \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_nep_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8A_nep_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### 8. 8B: NEP SSP585 #######
####### abschange ########
all_objects <- ls()
list585_abschange <- grep("NEP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nep_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + rs585_13) /13
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP585_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (13)"),
     #col=RdYlGn,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
     breaks=round(seq(-10e-08, 10e-08,2e-08), digits = 10),
     #breaks=round(seq(-3e-08, 3e-08,0.5e-08), digits = 10),
     col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nep \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_nep_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8B_nep_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange ########
all_objects <- ls()
list585_relchange <- grep("NEP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nep_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + rs585_13) /13
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (13)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nep \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_nep_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8B_nep_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 9. 9A: NBP SSP126 #######
####### abschange ########
all_objects <- ls()
list126_abschange <- grep("NBP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nbp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 + rs126_13 + rs126_14) /14
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP126_ENSEMBLE_abschange1530_85100, # *12 im (neuen) Durchlauf (19.7) bereits angewendet
     main= paste("Mean nbp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (14)"),
     col=RdYlGn11_2positiv,
     #breaks=round(seq(-3e-07, 3e-07,0.5e-07), digits = 10),
     breaks=round(seq(-6.750e-08, 1.50e-08,0.750e-08), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_nbp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9A_nbp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### relchange ########

all_objects <- ls()
list126_relchange <- grep("NBP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nbp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 + rs126_13 + rs126_14) /14
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nbp,nbp,nbp,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nbp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (14)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_nbp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9A_nbp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### 9. 9B: NBP SSP585 #######
####### abschange #####
all_objects <- ls()
list585_abschange <- grep("NBP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nbp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + 
                                              rs585_13 + rs585_14 + rs585_15 + rs585_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP585_ENSEMBLE_abschange1530_85100, # *12 im (neuen) Durchlauf (19.7) bereits angewendet
     main= paste("Mean nbp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     col=RdYlGn11_2positiv,
     #breaks=round(seq(-3e-07, 3e-07,0.5e-07), digits = 10),
     breaks=round(seq(-6.750e-08, 1.50e-08,0.750e-08), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_nbp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9B_nbp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange ########
all_objects <- ls()
list585_relchange <- grep("NBP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nbp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + 
                                              rs585_13 + rs585_14 + rs585_15 + rs585_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nbp,nbp,nbp,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nbp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_nbp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9B_nbp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




#### Percent Change Tabelle speichern ####
setwd(dir='E:/Masterarbeit/Data/Tabelle Percent Change/')
WD <- getwd()
#cVeg und treefrac sind schon ganz durchgelaufen, der Rest muss nochmal
write.csv(x=df_cVeg_SSP126, file=paste(WD, '/df_cVeg_SSP126.csv', sep=""), 
          row.names = TRUE)

write.xlsx(df_cVeg_SSP126, paste(WD, '/df_cVeg_SSP126.xlsx', sep=""), sheetName = "Yearly Means", 
           col.names = TRUE, row.names = FALSE, append = FALSE, showNA = FALSE)

df_cVeg_SSP126_Sicherheitskopie <- df_cVeg_SSP126
#openxlsx
#df_cVeg_SSP126$year <- as.character(df_cVeg_SSP126$year)

is.nan.data.frame <- function(x) {
  do.call(cbind, lapply(x, is.nan))
}
is.infinite.data.frame <- function(x) {
  do.call(cbind, lapply(x, is.infinite))
}
df_cVeg_SSP126[is.nan(df_cVeg_SSP126)] <- 0
df_cVeg_SSP126[is.infinite(df_cVeg_SSP126)] <- 0

is.nan.data.frame <- function(x)
  do.call(cbind, lapply(x, is.nan))
df_cVeg_SSP126[is.nan(df_cVeg_SSP126)] <- 0

wb <- createWorkbook()## Create Workbook object and add worksheets
## Add worksheets
addWorksheet(wb, "cVegSSP126")
addWorksheet(wb, "cVegSSP585")
addWorksheet(wb, "treeFracSSP126")
addWorksheet(wb, "treeFracSSP585")
addWorksheet(wb, "cVegSSP585-BGC")
addWorksheet(wb, "treeFracSSP585-BGC")
addWorksheet(wb, "cLandSSP585")
addWorksheet(wb, "cLandSSP126")
setwd(dir='E:/Masterarbeit/Data/Tabelle Percent Change/')
WD <- getwd()
writeData(wb, sheet="cVegSSP126", x=df_cVeg_SSP126, 
          colNames = TRUE, rowNames = TRUE)

saveWorkbook(wb, paste(WD, 'df_cVeg_SSP126', '.xlsx', sep=""), overwrite=TRUE)
openXL(wb)




###### THE END ######
#Save Workspace
save.image("E:/Masterarbeit/Data/CMIP6_Data/Rworkspace.RData")
### Dann Workspace-Datei manuell unter aktuellem Skript-Namen abspeichern!


### THE END ###



####### 4. Papierkorb ######
## siehe Skript 4.Papierkorb.R ##

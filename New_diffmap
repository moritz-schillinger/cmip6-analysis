##### 0. Packages ##########################################################################

# cVeg SSP126: 16 Modelle
# cVeg SSP585: 17 Modelle
# treeFrac SSP126: 15 Modelle
# treeFrac SSP585: 15 Modelle

# Load packages
library(rgdal)     # for spatial data manipulation. Read or write spatial data files (raster uses it behind the scenes).
library(raster)    # for raster data manipulation. Defines alternative classes for raster data (RasterLayer, RasterStack, RasterBrick)
library(ncdf4)     # open netcdfs
library(sp)        # for vector data manipulation. read spatial features e.g. shapefiles
library(sf)        # for spatial data manipulation. simple features - successor of sp package
library(rasterVis) # for visualisation of time-series data
library(RColorBrewer) # for color ramps
library(grDevices) # for rainbow colour ramp
library(ggplot2)   # for making good plots (gg - grammar of graphics)
library(viridis)   # for nice color ramps and so
library(plotrix)   # for axis breaks
library(tidync)
library(Rmisc)     # for confidence interval calculation
library(colorspace)# for nice color ramps and so
library(xlsx)
library(openxlsx)
library(jcolors)
library(palr)
library(cartography)
library(pals)
library(shiny)
library(ggthemes)
library(grid)
library(ggsci)



############################################################################################
##### 1. Preparations #####

amazon_biome <- readOGR("E:/Masterarbeit/Data/Other_Data/Amazon_biome/Amazon_Biome_WWF_Olson/data/commondata/data0/amazonia.shp")
amazon_biome_extent <- extent(amazon_biome) + c(-1,1,-1,1) # Erweiterung des Extents um jeweils 1 Grad nach aussen, um den gesamten Extent im Plot zu sehen.
country_boundaries <- readOGR("E:/Masterarbeit/Data/Other_Data/Global_administrative_boundaries_national_level/gaul0_asap/gaul0_asap.shp")
amazon_rivers <- readOGR("E:/Masterarbeit/Data/MajorRivers_NaturalEarth/rivers_in_the_Amazon.shp")
years <- format(seq(as.Date('2015/01/16'), as.Date('2100/12/16'), by='month'), '%Y%m') 

# ab hier mit levelplot von rasterVis arbeiten
original_oma = par(oma = c(0,0,0,0))
#original_oma <- c(0.0, 0.0, 0.0, 0.0) # save original outer margin areas (0 0 0 0)
par(mfrow=c(1,1))
plot(amazon_biome, type = "n") # start a new plot with the extent of amazon biome, empty (type="n" means empty) # vlt einfach um plotfenszter zu initieren?
lines(country_boundaries, col='grey65')
setwd(dir = "E:/Masterarbeit/Data/CMIP6_ssp585_bgc")
WD = getwd()
directories_ssp585_bgc <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cv_ssp585_bgc <- directories_ssp585_bgc[ grepl("cVeg", directories_ssp585_bgc) ] # grepl fungiert wie 'pattern' (bei list.dirs nicht verfügbar)
directories_tf_ssp585_bgc <- directories_ssp585_bgc[ grepl("treeFrac", directories_ssp585_bgc) ]
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data")
WD = getwd()
directories <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cv <- directories[ grepl("cVeg", directories) ] # grepl fungiert wie 'pattern' (bei list.dirs nicht verfügbar)
directories_tf <- directories[ grepl("treeFrac", directories) ]
directories_cv_ssp126 <- directories_cv[ grepl("SSP126", directories_cv) ] # now all folder directories named with "cVeg" and with "SSP585" are listed
directories_cv_ssp585 <- directories_cv[ grepl("SSP585", directories_cv) ]
directories_tf_ssp126 <- directories_tf[ grepl("SSP126", directories_tf) ]
directories_tf_ssp585 <- directories_tf[ grepl("SSP585", directories_tf) ]

#directories_gpp_ssp585 <- directories_gpp_ssp585[19:20]
# directories Carbon Data
setwd(dir = "E:/Masterarbeit/Data/CMIP6_Data_Carbon")
WD = getwd()
directories_c <- list.dirs(path = WD, full.names = TRUE, recursive = TRUE)
directories_cL <- directories_c[ grepl("cLand", directories_c) ]
directories_cL_ssp126 <- directories_cL[ grepl("SSP126", directories_cL) ]
directories_cL_ssp585 <- directories_cL[ grepl("SSP585", directories_cL) ]
directories_gpp <- directories_c[ grepl("gpp", directories_c) ]
directories_gpp_ssp126 <- directories_gpp[ grepl("SSP126", directories_gpp) ]
directories_gpp_ssp585 <- directories_gpp[ grepl("SSP585", directories_gpp) ]
directories_npp <- directories_c[ grepl("npp", directories_c) ]
directories_npp_ssp126 <- directories_npp[ grepl("SSP126", directories_npp) ]
directories_npp_ssp585 <- directories_npp[ grepl("SSP585", directories_npp) ]
directories_nep <- directories_c[ grepl("nep", directories_c) ]
directories_nep_ssp126 <- directories_nep[ grepl("SSP126", directories_nep) ]
directories_nep_ssp585 <- directories_nep[ grepl("SSP585", directories_nep) ]
directories_nbp <- directories_c[ grepl("nbp", directories_c) ]
directories_nbp_ssp126 <- directories_nbp[ grepl("SSP126", directories_nbp) ]
directories_nbp_ssp585 <- directories_nbp[ grepl("SSP585", directories_nbp) ]
#directories_gpp_ssp126 <- directories_gpp_ssp126[1:2]

crs_wgs84 <- crs(amazon_biome) # Rasterstacks will be projected to this crs if they are in another crs
colRamp <- colorRampPalette(c("#770000", "#BB7F7F", "grey95", "#80FF00", "#00FF80", "#0080FF", "#0000FF", "#FF00FF")) #rot,gelb,grau(0),hellgrün,grünblau,mittelblau, dunkelblau, magenta
colors <- colorRampPalette(c("#bd0000", "white", "#007a15"))  # alternative IPCC colors: c("#67001F", "#F7F7F7", "#053061")

# IPCC Colors from Visual Style Guide
col_rcp126 <- "#003566" # dunkelblau
col_rcp_126_shade <- "#4393c3" # hellblau
col_rcp585 <- "#990003" # dunkelrot
col_rcp_585_shade <- "#f4af9c" # hellrot
col_Ensmean <- "black"
col_shade1 <- "#808080"
col_shade2 <- "#5baeb2"
col_shade3 <- "#ccae71"
col_shade4 <- "#bfbfbf"
col_shade5 <- "#dfedc3"
CI_shade_red <- adjustcolor("red",alpha.f=0.5)
CI_shade_blue <- adjustcolor("blue",alpha.f=0.5)
CI_shade_grey <- adjustcolor("grey25",alpha.f=0.5)
CI_shade_black <- adjustcolor("black",alpha.f=0.5)
plot_extent <- extent(-80.5, -44, -18.5, 9) # length=4; order= xmin, xmax, ymin, ymax)
RdYlGn12 <- c("#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#00b2c6")
RdYlGn11 <- c("#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837")
RdYlGn12_9positiv <- c("#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C","#602282","#9000A8")
RdYlGn15_12positiv<- c("#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C","#602282","#9000A8","#B15170","#D2A238","#F3F300")
RdYlGn11_2positiv <-  c("#1C0B01","#410737","#66046E","#8c01a5","#a50126","#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a")   ##es geht von rot nach grün
RdYlGn12_8positiv <- c("#d73027","#f56d43","#fdae61","#fee08a","#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C","#602282","#9000A8")
RdYlGn15_6positiv <- c("#1C0B01","#410737","#66046E","#8c01a5","#a50126","#d73027" ,"#f56d43","#fdae61","#fee08a", "#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#30455C")
RdYlGn10_7positiv <- c("#f56d43", "#fdae61", "#fee08a", 
                       "#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#003d21","#00b2c6")
trick <- c("#f56d43", "#fdae61", "#fee08a", 
           "#d9ef8b","#a7d96a","#67bd64","#1a984f","#006837","#003d21")
green_pal <- ocean.speed(15)
green_pal20 <- ocean.speed(20)
green_pal10 <- ocean.speed(10)
redwhitegreen <- scale_colour_gradient2_tableau(palette = "Red-White-Green", na.value = "grey50", guide = "colourbar")
RdYlGn <- brewer.pal(11, 'RdYlGn')
red_pal15 <- paste(ocean.amp(15))
red_pal17 <- c(paste(rev(red_pal15)), "#d9ef8b","#a7d96a")
skyr <- rev(red_pal15)
red_pal15_2 <- c(paste(skyr[3:15]), "#d9ef8b")
blue_pal <- ocean.tempo(11) #carto.pal(pal1 = "blue.pal" ,n1 = 11)
blue_pal15 <- ocean.tempo(15)
RdYlGn <- brewer.pal(11, 'RdYlGn')
viridis11 <- rev(viridis(11))
viridis9 <- rev(viridis(9))

RdBu10 <- brewer.pal(10, 'RdBu')
RdBu11 <- brewer.pal(11, 'RdBu')
pr_change2 <- RdBu11[3:11]
pr_change <- c("#410737",paste(RdBu10))
pr_change2 <- c("#D6604D", "#F4A582", "#FDDBC7", "#F7F7F7","#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061","#410737")
#carto.pal(pal1 = "green.pal" ,n1 = 13)
#cv_change <- rev(brewer.pal(9, 'Reds'))
#cv_change <- c("#67000D", "#A50F15", "#CB181D", "#EF3B2C", "#FB6A4A", "#FC9272", "#FCBBA1", "#FEE0D2", #dunkelrot bis hellrot (8), dann mattweiß,
               #"#F7F7F7",
               #"#E5F5E0", "#C7E9C0", "#A1D99B", "#74C476", "#41AB5D", "#238B45", "#006D2C", "#00441B") #hellgrün bis dunkelgrün (8)
cv_change2 <- c(rev(ocean.balance(13)),"#ffea05") #cveg relchange
nbp_change_neg <- ocean.amp(12)
nbp_change_neg <- nbp_change_neg[4:12]
nbp_change_pos <- ocean.speed(12)
nbp_change <- c(rev(nbp_change_neg),nbp_change_pos[1:9])

hellblau <-  "#00b2c6"
dunkelblau <- "#006699"
nepnbp_change <- c("#410737","#66046E","#8c01a5","#a50126","#d73027" ,"#f56d43","#fdae61","#fee08a","#D9EF8B", "#A6D96A", "#66BD63", "#1A9850", "#006837", "#004726", hellblau, dunkelblau)

cv_change_neg <- ocean.amp(11)
cv_change_neg <- cv_change_neg[4:11]
#cv_change_pos <- ocean.speed(11)
cv_change_pos <- rgb_material(palette = c("green"), n=10)
cv_change <- c(rev(cv_change_neg),"grey90",cv_change_pos[3:10]) #cveg abschange
cv_change_bgc <- c(cv_change[3:17],"#244B15","#332C01")
#RdYlGn (12)
#FFFF00 (neu dazu - gelb - außergewöhnlich tiefer Wert)
#1C0B01 (neu dazu - schwarzbraun)
#410737 (neu dazu - lilabraun)
#66046E (neu dazu - dunkellila)
#8c01a5 (neu dazu - lilarot)
#a50126 (dunkelrot)
#d73027
#f56d43
#fdae61
#fee08a (hellstes rot)
#---- NULL -----#
#d9ef8b (hellstes grün)
#a7d96a
#67bd64
#1a984f
#006837 (dunkelgrün)
#00b2c6 (türkisgrün)
# verwende ich diese ramp?  

rainbow2 <- jcolors_contin(palette=c("rainbow"))
rainbow <- rainbow2(24)
rainbow <- sst_pal(palette=TRUE)
rainbow <- rainbow$cols[seq(1,240,10)]

ens_ssp1 <- "SSP126"
ens_ssp5 <- "SSP585"
ens_ssp5bgc <- "SSP5-BGC"
c1 <- rainbow[1]#    ACCESS-CM2
m1 <- "ACCESS-CM2"
c2 <- rainbow[2]#    ACCESS-ESM1-5
m2 <- "ACCESS-ESM1-5"
c3 <- rainbow[3]#    BCC-CSM2-MR
m3 <- "BCC-CSM2-MR"
c4 <- rainbow[4]#    CanESM5-CanOE
m4 <- "CanESM5-CanOE"
c5 <- "grey39"  #    CanESM5
m5 <- "CanESM5"
c6 <- rainbow[6]#    CESM2-WACCM
m6 <- "CESM2-WACCM"
c7 <- rainbow[7]#    CESM2
m7 <- "CESM2"
c8 <- "hotpink" #    CMCC-CM2-SR5 
m8 <- "CMCC-CM2-SR5"
c9 <- rainbow[9]#    CNRM-CM6-1-HR 
m9 <- "CNRM-CM6-1-HR"
c10 <- "wheat3"#  CNRM-CM6-1
m10 <- "CNRM-CM6-1" 
c11 <- rainbow[11]#  CNRM-ESM2-1
m11 <- "CNRM-ESM2-1" 
c12 <- rainbow[13]  #  EC-Earth3-Veg
m12 <- "EC-Earth3-Veg"
c13 <- "magenta"    #  EC-Earth3
m13 <- "EC-Earth3"
c14 <- rainbow[14]#  HadGEM3-GC31-LL
m14 <- "HadGEM3-GC31-LL"
c15 <- rainbow[15]#  INM-CM4-8
m15 <- "INM-CM4-8"
c16 <- rainbow[16]#  INM-CM5-0
m16 <- "INM-CM5-0"
c17 <- rainbow[17]#  IPSL-CM6A-LR
m17 <- "IPSL-CM6A-LR"
c18 <- rainbow[18]#  MIROC-ES2L
m18 <- "MIROC-ES2L"
c19 <- rainbow[19]#  MPI-ESM1-2-HR
m19 <- "MPI-ESM1-2-HR"
c20 <- rainbow[20]#  MPI-ESM1-2-LR
m20 <- "MPI-ESM1-2-LR"
c21 <- rainbow[21]#  MRI-ESM2-0
m21 <- "MRI-ESM2-0"
c22 <- "lawngreen"  #  NorESM2-LM
m22 <- "NorESM2-LM"
c23 <- rainbow[23]#  NorESM2-MM
m23 <- "NorESM2-MM"
c24 <- rainbow[5]  #  UKESM1-0-LL
m24 <- "UKESM1-0-LL"
Models <- c("ACCESS-CM2", "ACCESS-ESM1-5", "BCC-CSM2-MR", "CanESM5-CanOE", "CanESM5", "CESM2-WACCM", "CESM2",
            "CMCC-CM2-SR5", "CNRM-CM6-1-HR", "CNRM-CM6-1", "CNRM-ESM2-1", "EC-Earth3-Veg", "EC-Earth3",
            "HadGEM3-GC31-LL", "INM-CM4-8", "INM-CM5-0", "IPSL-CM6A-LR", "MIROC-ES2L", "MPI-ESM1-2-HR",
            "MPI-ESM1-2-LR", "MRI-ESM2-0", "NorESM2-LM", "NorESM2-MM", "UKESM1-0-LL")
Models_cVeg <- c(ens_ssp1, ens_ssp5,m2,m3,m4,m5,m6,m7,m11,m12,m15,m16,m17,m18,m20,m21,m22,m23,m24) #17
Models_cVeg_ssp1 <- c(ens_ssp1, ens_ssp5,m2,m3,m4,m5,m6,m7,m11,m12,m15,m16,m17,m18,m20,m22,m23,m24) #16
Models_treeFrac <- c(ens_ssp1, ens_ssp5, m1,m4,m5,m6,m7,m10,m11,m12,m14,m15,m16,m17,m19,m20,m24) #15
Models_cVegBGC <- c(ens_ssp5bgc, m5,m11,m18,m21,m24) #5
Models_treeFracBGC <- c(ens_ssp5bgc, m11,m24) #2
Models_cLand <- c(ens_ssp1, ens_ssp5, m1,m5,m6,m7,m8,m11,m17,m18,m20,m22,m23)#11
Models_gpp <- c(ens_ssp1, ens_ssp5, m1,m3,m4,m5,m6,m7,m8,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m21,m22,m23)#20
Models_gpp_ssp1 <- c(ens_ssp1, ens_ssp5, m1,m3,m4,m5,m6,m7,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m22,m23)#18
Models_npp <- c(ens_ssp1, ens_ssp5, m1,m3,m4,m5,m6,m7,m8,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m21,m22,m23)#20
Models_npp_ssp1 <- c(ens_ssp1, ens_ssp5, m1,m3,m4,m5,m6,m7,m9,m10,m11,m13,m15,m16,m17,m18,m19,m20,m22,m23)#18
Models_nep <- c(ens_ssp1, ens_ssp5,m1,m3,m5,m6,m7,m8,m11,m13,m17,m20,m21,m22,m23) #13
Models_nep_ssp1 <- c(ens_ssp1, ens_ssp5,m1,m3,m5,m6,m7,m11,m13,m17,m20,m22,m23)#11
Models_nbp <- c(ens_ssp1, ens_ssp5,m1,m4,m5,m6,m7,m8,m11,m13,m15,m16,m17,m18,m20,m21,m22,m23)
Models_nbp_ssp1 <- c(ens_ssp1, ens_ssp5,m1,m4,m5,m6,m7,m11,m13,m15,m16,m17,m18,m20,m22,m23)


# Farben aller betreffenden Single Models + SSP1/5 vorangestellt
rainbow_cVeg <- c(col_Ensmean, col_Ensmean, c2,c3,c4,c5,c6,c7,c11,c12,c15,c16,c17,c18,c20,c21,c22,c23,c24)
rainbow_cVeg_ssp1 <- c(col_Ensmean, col_Ensmean, c2,c3,c4,c5,c6,c7,c11,c12,c15,c16,c17,c18,c20,c22,c23,c24)
rainbow_treeFrac <- c(col_Ensmean, col_Ensmean, c1,c4,c5,c6,c7,c10,c11,c12,c14,c15,c16,c17,c19,c20,c24)
rainbow_cVegBGC <- c(col_Ensmean, c5,c11,c18,c21,c24)
rainbow_treeFracBGC <- c(col_Ensmean, c11,c24) #2
rainbow_cLand <- c(col_Ensmean, col_Ensmean, c1,c5,c6,c7,c8,c11,c17,c18,c20,c22,c23)#11
rainbow_gpp <- c(col_Ensmean, col_Ensmean, c1,c3,c4,c5,c6,c7,c8,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c21,c22,c23)#20
rainbow_gpp_ssp1 <- c(col_Ensmean, col_Ensmean, c1,c3,c4,c5,c6,c7,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c22,c23)#18
rainbow_npp <- c(col_Ensmean, col_Ensmean, c1,c3,c4,c5,c6,c7,c8,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c21,c22,c23)#20
rainbow_npp_ssp1 <- c(col_Ensmean, col_Ensmean, c1,c3,c4,c5,c6,c7,c9,c10,c11,c13,c15,c16,c17,c18,c19,c20,c22,c23)#18
rainbow_nep <- c(col_Ensmean, col_Ensmean, c1,c3,c5,c6,c7,c8,c11,c13,c17,c20,c21,c22,c23)
rainbow_nep_ssp1 <- c(col_Ensmean, col_Ensmean, c1,c3,c5,c6,c7,c11,c13,c17,c20,c22,c23)
rainbow_nbp <- c(col_Ensmean, col_Ensmean, c1,c4,c5,c6,c7,c8,c11,c13,c15,c16,c17,c18,c20,c21,c22,c23)
rainbow_nbp_ssp1 <- c(col_Ensmean, col_Ensmean, c1,c4,c5,c6,c7,c11,c13,c15,c16,c17,c18,c20,c22,c23)

MyOrder = matrix(1:24, nrow = 24, ncol = 4, byrow = FALSE)
#legend("bottom",Models[MyOrder], fill=rainbow[MyOrder] ,ncol=4)
horizontal <- seq(1,24,1)
vertikal <- seq(1,24,1)

plot(horizontal,vertikal, type="n")
abline(v=1, col=c1, lwd=5)
abline(v=2, col=c2, lwd=5)
abline(v=3, col=c3, lwd=5)
abline(v=4, col=c4, lwd=5)
abline(v=5, col=c5, lwd=5)
abline(v=6, col=c6, lwd=5)
abline(v=7, col=c7, lwd=5)
abline(v=8, col=c8, lwd=5)
abline(v=9, col=c9, lwd=5)
abline(v=10, col=c10, lwd=5)
abline(v=11, col=c11, lwd=5)
abline(v=12, col=c12, lwd=5)
abline(v=13, col=c13, lwd=5)
abline(v=14, col=c14, lwd=5)
abline(v=15, col=c15, lwd=5)
abline(v=16, col=c16, lwd=5)
abline(v=17, col=c17, lwd=5)
abline(v=18, col=c18, lwd=5)
abline(v=19, col=c19, lwd=5)
abline(v=20, col=c20, lwd=5)
abline(v=21, col=c21, lwd=5)
abline(v=22, col=c22, lwd=5)
abline(v=23, col=c23, lwd=5)
abline(v=24, col=c24, lwd=5)



FUN1 = function(x){quantile(x, probs=0.25, na.rm=TRUE)} #upper quartile
FUN3 = function(x){quantile(x, probs=0.75, na.rm=TRUE)} #lower quartile
Max <- function(x){max(x, na.rm=TRUE)}
Min <- function(x){min(x, na.rm=TRUE)}


#B15170
#D2A238
#F3F300

#RdYlGn (12)
#8c01a5 (lilarot)
#a50126 (dunkelrot)
#d73027
#f56d43
#fdae61
#fee08a (hellstes rot)
#d9ef8b (hellstes grün)
#a7d96a
#67bd64
#1a984f
#006837 (dunkelgrün)
#00b2c6 (türkisgrün)
# verwende ich diese ramp?

#     Define Area 1/2/3
#area1 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!
#area2 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!
#area3 <- extent(0.23, 0.86, 0.22, 0.73) # anpassen!

# BRAUCHBARES AUS DEM ORIGINAL CODE OHNE FOR LOOP #
#names(cVeg_SSP585_UKESM10LL)
#view(cVeg_SSP585_UKESM10LL)
#str(cVeg_SSP585_UKESM10LL)

# von Allans Script #par(mai=c(0.5,0.8,0.8,0.5))   
# mai=graph margins in inches. A numerical vector of the form c(bottom, left, top, right) which gives the margin size specified in inches.
# grid(NULL,NULL, lty = 1, col = "gray")

#colorramp <- colorRampPalette(c("#ff6161", "#f57043", "#63b32f", "#8daa04", "#af9e00", "#cc9000", "#e48025", "#00ba85", "#00ba54", "#0255ba"))
#animate(cVeg_SSP585_UKESM10LL, pause=0.003, n=1, col=colorramp(100)) # colorramp verbesserungswürdig!

#legend(0, 0, legend=c("cVeg SSP585 Ensemble Mean", "cVeg SSP126 Ensemble Mean"),
#       col=c("#990002", "#003466"), lty=2:2, lwd=3, cex=0.8, text.font=2, # colors according IPCC SSP colors!
#       xjust = 0,      # 0.5 means center adjusted
#       yjust = 0,      # 0.5 means center adjusted
#       x.intersp = 0.5, # adjust character interspacing as you like to effect box width
#       y.intersp = 0.5,  # adjust character interspacing to effect box height
#      adj = c(0, 0.5))  # adjust string position (default values used here)
# cex = 1.5,      # change cex if you like (not used here)
# text.font = 2)  # bold the text if you like (not used here)
#old_tf_585 <- treeFrac_SSP585_UKESM10LL_spmean

#par(usr=c(-80.62500, -43.12500, -20, 10)) # funktioniert dieser Plot-Befehl?

############################################################################################

##### DIFFMAP SINGLE MODEL ITERATION ######
###### 1A: cVeg_ssp126 ######

for (i in 1:length(directories_cv_ssp126)) 
{ 
  setwd(dir = directories_cv_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # bei cVeg+cLand: kg/m2 --> Mg/ha
  yrmean <- yrmean*10
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
         #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
         #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2)*10,
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
# plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,450,30),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,450,30),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)

###### 1B: cVeg_ssp585 ######
for (i in 1:length(directories_cv_ssp585)) 
{ 
  setwd(dir = directories_cv_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # bei cVeg+cLand: kg/m2 --> Mg/ha
  yrmean <- yrmean*10
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2)*10,
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,450,30),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,450,30),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)
###### 2A: treeFrac_ssp126 ######
for (i in 1:length(directories_tf_ssp126)) 
{ 
  setwd(dir = directories_tf_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100,
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-20,20,4),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(0,100,5),
       col=green_pal20,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(0,100,5),
       col=green_pal20,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
###### 2B: treeFrac_ssp585 ######
for (i in 1:length(directories_tf_ssp585)) 
{ 
  setwd(dir = directories_tf_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100,
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   breaks=seq(-20,20,4),
                                   col=RdYlGn12,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(0,100,5),
       col=green_pal20,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(0,100,5),
       col=green_pal20,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
######  3: cVeg_ssp585-BGC ######
for (i in 1:length(directories_cv_ssp585_bgc)) 
{ 
  setwd(dir = directories_cv_ssp585_bgc[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # bei cVeg+cLand: kg/m2 --> Mg/ha
  yrmean <- yrmean*10
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2)*10,
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(-6,16,2)*10,
       col=RdYlGn12_9positiv,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       breaks=seq(-6,16,2)*10,
       col=RdYlGn12_9positiv,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)

######  4: treeFrac_ssp585-BGC ######

###### 5A: cLand_ssp126 ######
for (i in 1:length(directories_cL_ssp126)) 
{ 
  setwd(dir = directories_cL_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # bei cVeg+cLand: kg/m2 --> Mg/ha
  yrmean <- yrmean*10
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2)*10,
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,600,40),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,600,40),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
###### 5B: cLand_ssp585 ######
for (i in 1:length(directories_cL_ssp585)) 
{ 
  setwd(dir = directories_cL_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  #rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # bei cVeg+cLand: kg/m2 --> Mg/ha
  yrmean <- yrmean*10
  # Schritt NICHT für cVeg, cLand, treeFrac!
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  #assign(x = paste(name, "relchange1530_85100", sep = "_"),
  #value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   #col=RdYlGn12,
                                   breaks=seq(-6,16,2)*10,
                                   col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # par(mfrow=c(1,1))
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,600,40),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=green_pal,
       breaks=seq(0,600,40),
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)
###### 6A: gpp_ssp126 #####

for (i in 1:length(directories_gpp_ssp126)) 
{ 
  setwd(dir = directories_gpp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
        # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot(abschange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=RdYlGn12,
       breaks=seq(-15,15,2.5), # urspr: seq(-6e-07, 6e-07,1e-07), multiplizieren mit *((60*60*24*365*10000)/1000)
       #col=RdYlGn12_9positiv,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in GPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot relchange
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75)  # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=green_pal,
       breaks=seq(0,600,40))
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=green_pal,
       breaks=seq(0,600,40))
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1) # empty temp file folder with files older than 0.5 hours (to make space for calculation temp files)


###### 6B: gpp_ssp585 #####
for (i in 1:length(directories_gpp_ssp585)) 
{ 
  setwd(dir = directories_gpp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
         #value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
         #value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot(abschange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=RdYlGn12,
       breaks=seq(-15,15,2.5),
       #col=RdYlGn12_9positiv,
       #breaks=seq(-10,10,2),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in GPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot relchange
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75)  # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=green_pal,
       breaks=seq(0,600,40))
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       #breaks=seq(-12,12,2),
       col=green_pal,
       breaks=seq(0,600,40))
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
}
removeTmpFiles(h=1) # empty temp file folder with files older than 0.5 hours (to make space for calculation temp files)



###### 7A: npp_ssp126 ######
for (i in 1:length(directories_npp_ssp126)) 
{ 
  setwd(dir = directories_npp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.8,1.8,0.3), digits = 2),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-1.8,1.8,0.3), digits = 2),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
       lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-1.8,1.8,0.3), digits = 2),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
###### 7B: npp_ssp585 ######
for (i in 1:length(directories_npp_ssp585)) 
{ 
  setwd(dir = directories_npp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-1.8,1.8,0.3), digits = 2),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NPP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-60,160,20),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NPP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-1.8,1.8,0.3), digits = 2),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-1.8,1.8,0.3), digits = 2),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)
###### 8A: nep_ssp126 ######
for (i in 1:length(directories_nep_ssp126)) 
{ 
  setwd(dir = directories_nep_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-0.36,0.36,0.06), digits = 3),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NEP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
###### 8B: nep_ssp585 ######
for (i in 1:length(directories_nep_ssp585)) 
{ 
  setwd(dir = directories_nep_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-0.36,0.36,0.06), digits = 3),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NEP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)
###### 9A: nbp_ssp126 ######
for (i in 1:length(directories_nbp_ssp126)) 
{ 
  setwd(dir = directories_nbp_ssp126[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-0.36,0.36,0.06), digits = 3),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NBP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=1)
###### 9B: nbp_ssp585 ######
for (i in 1:length(directories_nbp_ssp585)) 
{ 
  setwd(dir = directories_nbp_ssp585[i]) # für i wird jeweils eine neue Model-directory eingesetzt (gefiltert nach variable+ssp)
  #setwd(dir="E:/Masterarbeit/Data/CMIP6_Data/UKESM1-0-LL/treeFrac250km_SSP585")
  WD <- getwd()
  nc_list <- list.files(path = WD, pattern=".nc", recursive=TRUE) 
  filename <- as.character(nc_list[1]) # Dateinamen der ersten (ggfs. einzigen) netCDF-Datei speichern. Dann werden einzelne Komponenten extrahiert.
  variable <- sapply(strsplit(filename, "_"), `[`, 1)   
  variable <- toupper(variable) # make uppercase characters 
  model1 <- sapply(strsplit(filename, "_"), `[`, 3)
  model <- gsub("-", "", model1) # removes all hyphens
  ssp <- sapply(strsplit(filename, "_"), `[`, 4)
  ssp <- toupper(ssp) # make uppercase characters
  name <- paste(variable, ssp, model, sep="_")
  rasterstack <- stack(nc_list)
  if(compareCRS(rasterstack,amazon_biome)==FALSE) { # falls rasterstack nicht in wgs84 ist, wird es in wgs84 projiziert
    projectRaster(from = rasterstack, crs = crs_wgs84)} 
  rasterstack <- rotate(rasterstack)  # Rotate a Raster* object that has x coordinates (longitude) from 0 to 360, to standard coordinates between -180 and 180 degrees. Longitude between 0 and 360 is frequently used in global climate models.
  rasterstack_crop <- crop(rasterstack, amazon_biome_extent)
  rasterstack_crop <- disaggregate(x = rasterstack_crop, fact = res(rasterstack_crop)*10) # output cell size ~0.1x0.1°
  rasterstack_mask <- mask(rasterstack_crop, amazon_biome)
  rasterstack_mask <- rasterstack_mask*((60*60*24*(365/12)*10000)/1000) # =MgC/ha/MONTH ((s*min*hr*(year/months)*faktor von m2 auf ha)/Umrechnung kg in Mg) so ist die neue EInheit: kg C/ha/month. Letzter Teil der Multiplikation= faktor von m2 in ha.
  # Einheit muss per month bleiben, weil monatliche Layer. Unten Aggregation zu jährlichen Werten. 
  #assign(x = paste(name),  # Werte von rasterstack_mask werden unter neuem, eindeutigen Namen abgespeichert.
  # value = rasterstack_mask)
  ####
  ####
  yrmean <- aggregate(rasterstack_mask, c(1,1,12), na.rm=TRUE) #c(1,1,12) ist der Aggregation factor to year: expressed as number of cells in each direction (in x-y-z direction) = three integers because aggregating over layers.
  # Schritt NICHT für cVeg, cLand, treeFrac!
  yrmean <- yrmean*12
  #assign(x = paste(name, "yrmean", sep = "_"), 
  #       value = yrmean)
  ### 16 year aggregations ####
  t1530 <- yrmean[[1:16]] # first 16 years
  t1530 <- aggregate(t1530, fact=c(1,1,16), fun=mean)
  t85100 <- yrmean[[71:86]] # last 16 years
  t85100 <- aggregate(t85100, fact=c(1,1,16), fun=mean)
  abschange1530_85100 <- t85100-t1530 # neu minus alt
  relchange1530_85100 <- (abschange1530_85100/t1530)*100 # neu minus alt geteilt durch alt mal 100
  assign(x = paste(name, "t1530", sep = "_"), 
         value = t1530)
  assign(x = paste(name, "t85100", sep = "_"), 
         value = t85100)
  assign(x = paste(name, "abschange1530_85100", sep = "_"),
         value = abschange1530_85100)
  assign(x = paste(name, "relchange1530_85100", sep = "_"),
         value = relchange1530_85100)
  
  # plot abschange
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL')
  par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
  plot_abschange1530_85100 <- plot(abschange1530_85100, 
                                   main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
                                   #breaks=seq(-12,12,2),
                                   col=RdYlGn12,
                                   breaks=round(seq(-0.36,0.36,0.06), digits = 3),
                                   #col=RdYlGn12_9positiv,
                                   #breaks=seq(-10,10,2),
                                   #col=brewer.pal(10, "RdYlGn"),
                                   las=1,
                                   cex.main=1, cex.lab=0.75, cex.axis=0.75,
                                   legend=TRUE,
                                   ext = plot_extent)
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       paste("Change in NBP \n[Mg C/ha/yr]"), #expression('Mg C ha'^-1*' yr'^-1), "]", sep=""), 
       cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB1", name, "abschange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  assign(x = paste(name, "relchange1530_85100", sep = "_"), 
         value = relchange1530_85100)
  # sB2 plot:  Single model ensemble difference map (relative change)
  plot(relchange1530_85100, 
       main= paste("Mean", variable, "change //",ssp, "\n2015-2030 vs. 2085-2100 //", model1, sep=" "),
       breaks=seq(-90,270,30),
       col=RdYlGn12_9positiv,
       #breaks=c(-100,-75,-50,-25,0,25,50,75,100),
       #col=brewer.pal(10, "RdYlGn"),
       las=1,
       #xlab="Lat",
       #ylab="Lon",
       #ylim=c(ymin(amazon_biome_extent),ymax(amazon_biome_extent)),     # limit latitutde (y) map extent to extent of amazon_biome_extent
       cex.main=1, cex.lab=0.75, cex.axis=0.75    # cex.main: Size of main title, cex.lab: Size of axis labels (the text describing the axis), cex.axis: Size of axis text (the values that indicate the axis tick labels)
  )
  lines(amazon_rivers, col=alpha('lightblue', 0.6))
  lines(country_boundaries, col='grey65')
  lines(amazon_biome, lwd=0.5, col='grey30')
  par(xpd = TRUE) #Draw outside plot area
  corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
  text(x = corners[2]+2, y = corners[4]-4, 
       "Change in NBP \n[%]", cex=1, adj=0, srt = 0)
  dev.print(jpeg, paste("sB2", name, "relchange1530_85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  # plot 1530+85100
  setwd(dir = 'E:/Masterarbeit/Data/PLOTS/SINGLE_MODEL/1530 und 85100')
  plot(t1530, 
       main= paste("Mean", variable, "2015-2030 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "1530.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  plot(t85100, 
       main= paste("Mean", variable, "2085-2100 // ",ssp, "\n", model1, sep=" "),
       col=RdYlGn12,
       breaks=round(seq(-0.36,0.36,0.06), digits = 3),
       las=1,
       cex.main=1, cex.lab=0.75, cex.axis=0.75,
       legend=TRUE,
       ext = plot_extent)
  lines(amazon_biome, lwd=0.5, col='grey30')
  dev.print(jpeg, paste(name, "85100.jpg", sep="_"),
            quality=100, width=1500, height=1057, res=180, pointsize=12)
  
  
}
removeTmpFiles(h=0.5)



############################################################################################
##### ENSEMBLE DIFFMAP ######

##### 1. 1A: cVeg SSP126 #####
####### 1530 #####
all_objects <- ls()
list126_1530 <- grep("CVEG.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_1530[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_1530[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_1530[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_1530[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_1530[16])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10 + rs126_11 + rs126_12 +
                                               rs126_13 + rs126_14 + rs126_15 +
                                               rs126_16) /16
####### 85100 #####
all_objects <- ls()
list126_85100 <- grep("CVEG.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_85100[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_85100[16])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                          rs126_4 + rs126_5 + rs126_6 +
                                          rs126_7 + rs126_8 + rs126_9 +
                                          rs126_10 + rs126_11 + rs126_12 +
                                          rs126_13 + rs126_14 + rs126_15 +
                                          rs126_16) /16
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(xpd = TRUE) #Draw outside plot area
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(cVeg_SSP126_ENSEMBLE_1530, 
     main= paste("Mean cVeg 2015-2030 // SSP126 // ENSEMBLE (16)"),
     col=green_pal,
     breaks=seq(0,450,30), # neue aktuelle breaks    
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negativen Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(cVeg_SSP126_ENSEMBLE_85100, 
     main= paste("Mean cVeg 2085-2100 // SSP126 // ENSEMBLE (16)"),
     col=green_pal,
     breaks=seq(0,450,30),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


####### abschange #####

## Einheit ist noch nicht MgC/ha sondern kgC/m2. Sollte vorm Plotten konvertiert werden!
all_objects <- ls()
list126_abschange <- grep("CVEG.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,rs126_16,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10 + rs126_11 + rs126_12 +
                                               rs126_13 + rs126_14 + rs126_15 +
                                               rs126_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP126_ENSEMBLE_abschange1530_85100*10, 
     #main= paste("Mean cVeg change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-45,90,15),
     col=trick,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
#lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1A_cVeg_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange #####

all_objects <- ls()
list126_relchange <- grep("CVEG.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,rs126_16,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cVeg_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                               rs126_4 + rs126_5 + rs126_6 +
                                               rs126_7 + rs126_8 + rs126_9 +
                                               rs126_10 + rs126_11 + rs126_12 +
                                               rs126_13 + rs126_14 + rs126_15 +
                                               rs126_16) /16

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP126_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cVeg change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1A_cVeg_SSP126_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1A_cVeg_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)






##### 1. 1B: cVeg SSP585 #####
####### 1530 #####
all_objects <- ls()
list585_1530 <- grep("CVEG.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[17])), new_extent, keepres = TRUE)
sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_1530[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_1530[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_1530[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_1530[17])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                                rs585_4 + rs585_5 + rs585_6 +
                                rs585_7 + rs585_8 + rs585_9 +
                                rs585_10 + rs585_11 + rs585_12 +
                                rs585_13 + rs585_14 + rs585_15 +
                                rs585_16 + rs585_17) /17
####### 85100 #####
all_objects <- ls()
list585_85100 <- grep("CVEG.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[17])), new_extent, keepres = TRUE)
sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_85100[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_85100[17])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                rs585_4 + rs585_5 + rs585_6 +
                                rs585_7 + rs585_8 + rs585_9 +
                                rs585_10 + rs585_11 + rs585_12 +
                                rs585_13 + rs585_14 + rs585_15 +
                                rs585_16 + rs585_17) /17
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(cVeg_SSP585_ENSEMBLE_1530, 
     main= paste("Mean cVeg 2015-2030 // SSP585 // ENSEMBLE (17)"),
     col=green_pal,
     breaks=seq(0,450,30),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(cVeg_SSP585_ENSEMBLE_85100, 
     main= paste("Mean cVeg 2085-2100 // SSP585 // ENSEMBLE (17)"),
     col=green_pal,
     breaks=seq(0,450,30),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


####### abschange #####
all_objects <- ls()
list585_abschange <- grep("CVEG.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("BGC", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen

new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,rs585_16,rs585_17,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5 + rs585_6 +
                                               rs585_7 + rs585_8 + rs585_9 +
                                               rs585_10 + rs585_11 + rs585_12 +
                                               rs585_13 + rs585_14 + rs585_15 +
                                               rs585_16 + rs585_17) /17
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP585_ENSEMBLE_abschange1530_85100*10, 
     #main= paste("Mean cVeg change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (17)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-45,105,15),
     col=RdYlGn10_7positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
#lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1B_cVeg_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #####

all_objects <- ls()
list585_relchange <- grep("CVEG.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("BGC", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,rs585_16,rs585_17,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cVeg_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                               rs585_4 + rs585_5 + rs585_6 +
                                               rs585_7 + rs585_8 + rs585_9 +
                                               rs585_10 + rs585_11 + rs585_12 +
                                               rs585_13 + rs585_14 + rs585_15 +
                                               rs585_16 + rs585_17) /17

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cVeg_SSP585_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cVeg change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,580),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("1B_cVeg_SSP585_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("1B_cVeg_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)














##### 2. 2A: treeFrac SSP126 ######
####### 1530 ######
all_objects <- ls()
list126_1530 <- grep("TREEFRAC.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_1530[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_1530[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_1530[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_1530[15])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
treeFrac_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                               rs126_4 + rs126_5 + rs126_6 +
                               rs126_7 + rs126_8 + rs126_9 +
                               rs126_10 + rs126_11 + rs126_12 +
                               rs126_13 + rs126_14 + rs126_15) /15


####### 85100 ######
all_objects <- ls()
list126_85100 <- grep("TREEFRAC.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_85100[15])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
treeFrac_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                    rs126_4 + rs126_5 + rs126_6 +
                                    rs126_7 + rs126_8 + rs126_9 +
                                    rs126_10 + rs126_11 + rs126_12 +
                                    rs126_13 + rs126_14 + rs126_15) /15
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(treeFrac_SSP126_ENSEMBLE_1530, 
     main= paste("Mean tree fraction 2015-2030 // SSP126 // ENSEMBLE (15)"),
     breaks=seq(0,100,5),
     col=green_pal20,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "tree fraction\n [%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("2A_treeFrac_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(treeFrac_SSP126_ENSEMBLE_85100, 
     main= paste("Mean tree fraction 2085-2100 // SSP126 // ENSEMBLE (15)"),
     breaks=seq(0,100,5),
     col=green_pal20,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "tree fraction\n [%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("2A_treeFrac_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
####### abschange ######
all_objects <- ls()
list126_abschange <- grep("TREEFRAC.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")

compareRaster(rs126_1, rs126_2, rs126_3, rs126_4, rs126_5, rs126_6,
              rs126_7, rs126_8, rs126_9, rs126_10, rs126_11, rs126_12,
              rs126_13, rs126_14, rs126_15,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
treeFrac_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                                   rs126_4 + rs126_5 + rs126_6 +
                                                   rs126_7 + rs126_8 + rs126_9 +
                                                   rs126_10 + rs126_11 + rs126_12 +
                                                   rs126_13 + rs126_14 + rs126_15) /15

#neu
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(treeFrac_SSP126_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean treeFrac change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (15)"),
     breaks=seq(-12,10,2),
     col=RdYlGn11,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
dev.print(jpeg, paste("2A_treeFrac_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2A_treeFrac_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

##### 2. 2B: treeFrac SSP585 ######
####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("TREEFRAC.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_1530[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_1530[15])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
treeFrac_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                                    rs585_4 + rs585_5 + rs585_6 +
                                    rs585_7 + rs585_8 + rs585_9 +
                                    rs585_10 + rs585_11 + rs585_12 +
                                    rs585_13 + rs585_14 + rs585_15) /15


####### 85100 ######
all_objects <- ls()
list585_85100 <- grep("TREEFRAC.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
treeFrac_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                     rs585_4 + rs585_5 + rs585_6 +
                                     rs585_7 + rs585_8 + rs585_9 +
                                     rs585_10 + rs585_11 + rs585_12 +
                                     rs585_13 + rs585_14 + rs585_15) /15
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(treeFrac_SSP585_ENSEMBLE_1530, 
     main= paste("Mean tree fraction 2015-2030 // SSP585 // ENSEMBLE (15)"),
     breaks=seq(0,100,5),
     col=green_pal20,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "tree fraction [%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("2B_treeFrac_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(treeFrac_SSP585_ENSEMBLE_85100, 
     main= paste("Mean tree fraction 2085-2100 // SSP585 // ENSEMBLE (15)"),
     breaks=seq(0,100,5),
     col=green_pal20,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "tree fraction [%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("2B_treeFrac_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

####### abschange ######
all_objects <- ls()
list585_abschange <- grep("TREEFRAC.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")

compareRaster(rs585_1, rs585_2, rs585_3, rs585_4, rs585_5, rs585_6,
              rs585_7, rs585_8, rs585_9, rs585_10, rs585_11, rs585_12,
              rs585_13, rs585_14, rs585_15,
              extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE, orig=TRUE)

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
treeFrac_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                                   rs585_4 + rs585_5 + rs585_6 +
                                                   rs585_7 + rs585_8 + rs585_9 +
                                                   rs585_10 + rs585_11 + rs585_12 +
                                                   rs585_13 + rs585_14 + rs585_15) /15

#neu
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(treeFrac_SSP585_ENSEMBLE_abschange1530_85100, 
     main= paste("Mean treeFrac change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (15)"),
     breaks=seq(-12,10,2),
     col=RdYlGn11,
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTree Fraction \n[% points]", cex=1, adj=0, srt = 0)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
dev.print(jpeg, paste("2B_treeFrac_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("2B_treeFrac_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


##### 3. cVeg SSP585-BGC ######
####### 1530 #####
all_objects <- ls()
list585_BGC_1530 <- grep("CVEG.*SSP585-BGC.*t1530", all_objects, value=TRUE)
list585_BGC_1530 <- grep("ENSEMBLE", list585_BGC_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_BGC_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_1530[5])), new_extent, keepres = TRUE)
sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_BGC_1 <- resample(get(paste(list585_BGC_1530[1])), sample_raster, method="bilinear")
rs585_BGC_2 <- resample(get(paste(list585_BGC_1530[2])), sample_raster, method="bilinear")
rs585_BGC_3 <- resample(get(paste(list585_BGC_1530[3])), sample_raster, method="bilinear")
rs585_BGC_4 <- resample(get(paste(list585_BGC_1530[4])), sample_raster, method="bilinear")
rs585_BGC_5 <- resample(get(paste(list585_BGC_1530[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585_BGC", all_objects, value=TRUE)
cVeg_SSP585_BGC_ENSEMBLE_1530 <- (rs585_BGC_1 + rs585_BGC_2 + rs585_BGC_3 +
                                rs585_BGC_4 + rs585_BGC_5) /5
####### 85100 #####
all_objects <- ls()
list585_BGC_85100 <- grep("CVEG.*SSP585-BGC.*t85100", all_objects, value=TRUE)
list585_BGC_85100 <- grep("ENSEMBLE", list585_BGC_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_BGC_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_BGC_85100[5])), new_extent, keepres = TRUE)
sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_BGC_1 <- resample(get(paste(list585_BGC_85100[1])), sample_raster, method="bilinear")
rs585_BGC_2 <- resample(get(paste(list585_BGC_85100[2])), sample_raster, method="bilinear")
rs585_BGC_3 <- resample(get(paste(list585_BGC_85100[3])), sample_raster, method="bilinear")
rs585_BGC_4 <- resample(get(paste(list585_BGC_85100[4])), sample_raster, method="bilinear")
rs585_BGC_5 <- resample(get(paste(list585_BGC_85100[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585_BGC", all_objects, value=TRUE)
cVeg_SSP585_BGC_ENSEMBLE_85100 <- (rs585_BGC_1 + rs585_BGC_2 + rs585_BGC_3 +
                                 rs585_BGC_4 + rs585_BGC_5) /5

####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(cVeg_SSP585_BGC_ENSEMBLE_1530, 
     main= paste("Mean cVeg 2015-2030 // SSP585_BGC // ENSEMBLE (5)"),
     col=green_pal,
     breaks=seq(0,450,30),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585_BGC_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(cVeg_SSP585_BGC_ENSEMBLE_85100, 
     main= paste("Mean cVeg 2085-2100 // SSP585_BGC // ENSEMBLE (5)"),
     col=green_pal,
     breaks=seq(0,450,30),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "Vegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585_BGC_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


####### abschange ##### 
all_objects <- ls()
list585_abschange <- grep("CVEG.*SSP585-BGC.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
'cVeg_SSP585-BGC_ENSEMBLE_abschange1530_85100' <- (rs585_1 + rs585_2 + rs585_3 +
                                                     rs585_4 + rs585_5) /5
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(`cVeg_SSP585-BGC_ENSEMBLE_abschange1530_85100`*10, 
     #main= paste("Mean cVeg change // SSP585-BGC\n2015-2030 vs. 2085-2100 // ENSEMBLE (5)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-45,105,15),
     col=RdYlGn10_7positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585-BGC_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange #####
all_objects <- ls()
list585_relchange <- grep("CVEG.*SSP585-BGC.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
'cVeg_SSP585-BGC_ENSEMBLE_relchange1530_85100' <- (rs585_1 + rs585_2 + rs585_3 +
                                                     rs585_4 + rs585_5) /5
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(`cVeg_SSP585-BGC_ENSEMBLE_relchange1530_85100`, 
     main= paste("Mean cVeg change // SSP585-BGC\n2015-2030 vs. 2085-2100 // ENSEMBLE (5)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,2200),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nVegetation Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("3_cVeg_SSP585-BGC_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("3_cVeg_SSP585-BGC_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)






##### 5. 5A: cLand SSP126 ######
####### 1530 #####
all_objects <- ls()
list126_1530 <- grep("CLAND.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                                rs126_4 + rs126_5 + rs126_6 +
                                rs126_7 + rs126_8 + rs126_9 +
                                rs126_10) /10
####### 85100 #####
all_objects <- ls()
list126_85100 <- grep("CLAND.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                 rs126_4 + rs126_5 + rs126_6 +
                                 rs126_7 + rs126_8 + rs126_9 +
                                 rs126_10) /10
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(cLand_SSP126_ENSEMBLE_1530, 
     main= paste("Mean cLand 2015-2030 // SSP126 // ENSEMBLE (10)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
text(x = corners[2]+2, y = corners[4]-4, 
     "Total Terrestrial \nCarbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5A_cLand_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(cLand_SSP126_ENSEMBLE_85100, 
     main= paste("Mean cLand 2085-2100 // SSP126 // ENSEMBLE (10)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
text(x = corners[2]+2, y = corners[4]-4, 
     "Total Terrestrial \nCarbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5A_cLand_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


####### abschange #####
all_objects <- ls()
list126_abschange <- grep("CLAND.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                                rs126_4 + rs126_5 + rs126_6 +
                                                rs126_7 + rs126_8 + rs126_9 +
                                                rs126_10) /10
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP126_ENSEMBLE_abschange1530_85100*10, 
     #main= paste("Mean cLand change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (10)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-45,105,15),
     col=RdYlGn10_7positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
#lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5A_cLand_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5A_cLand_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange ########
all_objects <- ls()
list126_relchange <- grep("CLAND.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
cLand_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                                rs126_4 + rs126_5 + rs126_6 +
                                                rs126_7 + rs126_8 + rs126_9 +
                                                rs126_10) /10

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP126_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cLand change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (10)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,2200),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5A_cLand_SSP126_relchange1530_85100.jpg"),
   quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5A_cLand_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


##### 5. 5B: cLand SSP585 ######
####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("CLAND.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                                 rs585_4 + rs585_5 + rs585_6 +
                                 rs585_7 + rs585_8 + rs585_9 +
                                 rs585_10 + rs585_11) /11
####### 85100 #####
all_objects <- ls()
list585_85100 <- grep("CLAND.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                 rs585_4 + rs585_5 + rs585_6 +
                                 rs585_7 + rs585_8 + rs585_9 +
                                 rs585_10 + rs585_11) /11
####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(cLand_SSP585_ENSEMBLE_1530, 
     main= paste("Mean cLand 2015-2030 // SSP585 // ENSEMBLE (11)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
text(x = corners[2]+2, y = corners[4]-4, 
     "Total Terrestrial \nCarbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(cLand_SSP585_ENSEMBLE_85100, 
     main= paste("Mean cLand 2085-2100 // SSP585 // ENSEMBLE (11)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
par(xpd = TRUE) #Draw outside plot area
lines(amazon_biome, lwd=0.5, col='grey30')
text(x = corners[2]+2, y = corners[4]-4, 
     "Total Terrestrial \nCarbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
####### abschange #######
all_objects <- ls()
list585_abschange <- grep("CLAND.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                                rs585_4 + rs585_5 + rs585_6 +
                                                rs585_7 + rs585_8 + rs585_9 +
                                                rs585_10 + rs585_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP585_ENSEMBLE_abschange1530_85100*10, 
     #main= paste("Mean cLand change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=seq(-45,105,15),
     col=RdYlGn10_7positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
#lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[MgC/ha]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5B_cLand_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #######
all_objects <- ls()
list585_relchange <- grep("CLAND.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11)
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
cLand_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                                rs585_4 + rs585_5 + rs585_6 +
                                                rs585_7 + rs585_8 + rs585_9 +
                                                rs585_10 + rs585_11) /11

#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(cLand_SSP585_ENSEMBLE_relchange1530_85100, 
     main= paste("Mean cLand change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #breaks=seq(-12,12,2),
     #col=RdYlGn12,
     breaks=c(-60,-40,-20,0,20,40,60,80,100,120,140,160,200,300,2200),
     col=RdYlGn15_12positiv,
     #breaks=seq(-10,10,2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in \nTerrestrial Carbon \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("5B_cLand_SSP585_relchange1530_85100.jpg"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("5B_cLand_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



##### 6. 6A: GPP SSP126 ######
####### 1530 ######
all_objects <- ls()
list126_1530 <- grep("GPP.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_1530[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_1530[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_1530[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_1530[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_1530[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_1530[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_1530[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18


####### 85100 ######
all_objects <- ls()
list126_85100 <- grep("GPP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[18])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_85100[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_85100[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_85100[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_85100[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(gpp_SSP126_ENSEMBLE_1530, 
     main= paste("Mean gpp flux 2015-2030 // SSP126 // ENSEMBLE (18)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "GPP flux \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_GPP_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(gpp_SSP126_ENSEMBLE_85100, 
     main= paste("Mean gpp flux 2085-2100 // SSP126 // ENSEMBLE (18)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "GPP flux \n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_GPP_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)





####### abschange #######
all_objects <- ls()
list126_abschange <- grep("GPP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_abschange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_abschange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     col=RdYlGn12,
     breaks=seq(-15,15,2.5),     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_gpp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6A_gpp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### relchange #######
all_objects <- ls()
list126_relchange <- grep("GPP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_relchange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_relchange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
gpp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6A_gpp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6A_gpp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


##### 6. 6B: GPP SSP585 ######
####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("GPP.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_1530[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_1530[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_1530[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_1530[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_1530[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_1530[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_1530[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11 + rs585_12 +
                               rs585_13 + rs585_14 + rs585_15 + 
                               rs585_16 + rs585_17 + rs585_18 +
                               rs585_19 + rs585_20) /20


####### 85100 ######
all_objects <- ls()
list585_85100 <- grep("GPP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_85100[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_85100[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_85100[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_85100[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_85100[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11 + rs585_12 +
                               rs585_13 + rs585_14 + rs585_15 + 
                               rs585_16 + rs585_17 + rs585_18 +
                               rs585_19 + rs585_20) /20



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(gpp_SSP585_ENSEMBLE_1530, 
     main= paste("Mean gpp flux 2015-2030 // SSP585 // ENSEMBLE (20)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "GPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_GPP_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(gpp_SSP585_ENSEMBLE_85100, 
     main= paste("Mean gpp flux 2085-2100 // SSP585 // ENSEMBLE (20)"),
     col=green_pal,
     breaks=seq(0,600,40),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area

text(x = corners[2]+2, y = corners[4]-4, 
     "GPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_GPP_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
####### abschange ######
all_objects <- ls()
list585_abschange <- grep("GPP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_abschange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_abschange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_abschange[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP585_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (20)"),
     col=RdYlGn12,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10)*((60*60*24*(365/12)*10000)/1000),
     breaks=seq(-15,15,2.5),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_gpp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6B_gpp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange ######
all_objects <- ls()
list585_relchange <- grep("GPP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_relchange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_relchange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_relchange[20])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
gpp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(gpp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für GPP,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean gpp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     #breaks=seq(-90,240,30),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in GPP \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("6B_gpp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("6B_gpp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)





##### 7. 7A: NPP SSP126 ######
####### 1530 ######
all_objects <- ls()
list126_1530 <- grep("NPP.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_1530[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_1530[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_1530[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_1530[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_1530[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_1530[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_1530[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                               rs126_4 + rs126_5 + rs126_6 +
                               rs126_7 + rs126_8 + rs126_9 +
                               rs126_10 + rs126_11 + rs126_12 +
                               rs126_13 + rs126_14 + rs126_15 + 
                               rs126_16 + rs126_17 + rs126_18) /18


####### 85100 ######
all_objects <- ls()
list126_85100 <- grep("NPP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[18])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_85100[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_85100[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_85100[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_85100[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                rs126_4 + rs126_5 + rs126_6 +
                                rs126_7 + rs126_8 + rs126_9 +
                                rs126_10 + rs126_11 + rs126_12 +
                                rs126_13 + rs126_14 + rs126_15 + 
                                rs126_16 + rs126_17 + rs126_18) /18



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(npp_SSP126_ENSEMBLE_1530, 
     main= paste("Mean npp flux 2015-2030 // SSP126 // ENSEMBLE (18)"),
     col=green_pal20,
     breaks=seq(2,22,1),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(npp_SSP126_ENSEMBLE_85100, 
     main= paste("Mean npp flux 2085-2100 // SSP126 // ENSEMBLE (18)"),
     col=green_pal20,
     breaks=seq(2,22,1),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange ######
all_objects <- ls()
list126_abschange <- grep("NPP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_abschange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_abschange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     col=RdYlGn12,
     breaks=round(seq(-9, 9,1.5), digits = 3),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7A_npp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange #######
all_objects <- ls()
list126_relchange <- grep("NPP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[18])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")
rs126_17 <- resample(get(paste(list126_relchange[17])), sample_raster, method="bilinear")
rs126_18 <- resample(get(paste(list126_relchange[18])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
npp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 +
                                              rs126_13 + rs126_14 + rs126_15 + 
                                              rs126_16 + rs126_17 + rs126_18) /18
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean npp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (18)"),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NPP \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7A_npp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7A_npp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



##### 7. 7B: NPP SSP585 ######
####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("NPP.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_1530[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_1530[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_1530[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_1530[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_1530[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_1530[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_1530[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NPP_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11 + rs585_12 +
                               rs585_13 + rs585_14 + rs585_15 + 
                               rs585_16 + rs585_17 + rs585_18 +
                               rs585_19 + rs585_20) /20


####### 85100 ######
all_objects <- ls()
list585_85100 <- grep("NPP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_85100[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_85100[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_85100[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_85100[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_85100[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NPP_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                rs585_4 + rs585_5 + rs585_6 +
                                rs585_7 + rs585_8 + rs585_9 +
                                rs585_10 + rs585_11 + rs585_12 +
                                rs585_13 + rs585_14 + rs585_15 + 
                                rs585_16 + rs585_17 + rs585_18 +
                                rs585_19 + rs585_20) /20



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(NPP_SSP585_ENSEMBLE_1530, 
     main= paste("Mean NPP flux 2015-2030 // SSP585 // ENSEMBLE (20)"),
     col=green_pal20,
     breaks=seq(2,22,1),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(NPP_SSP585_ENSEMBLE_85100, 
     main= paste("Mean NPP flux 2085-2100 // SSP585 // ENSEMBLE (20)"),
     col=green_pal20,
     breaks=seq(2,22,1),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange #######
all_objects <- ls()
list585_abschange <- grep("NPP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_abschange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_abschange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_abschange[20])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
npp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP585_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean NPP change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (20)"),
     col=RdYlGn12,
     breaks=round(seq(-9, 9,1.5), digits = 3),
     #breaks=round(seq(-4.8e-08, 4.8e-08,8e-09), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NPP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7B_npp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




####### relchange #######
all_objects <- ls()
list585_relchange <- grep("NPP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[18])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[19])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[20])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")
rs585_18 <- resample(get(paste(list585_relchange[18])), sample_raster, method="bilinear")
rs585_19 <- resample(get(paste(list585_relchange[19])), sample_raster, method="bilinear")
rs585_20 <- resample(get(paste(list585_relchange[20])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
npp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 +
                                              rs585_13 + rs585_14 + rs585_15 + 
                                              rs585_16 + rs585_17 + rs585_18 +
                                              rs585_19 + rs585_20) /20
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(npp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für npp,NPP,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean NPP change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (20)"),
     #breaks=seq(-90,240,30),
     breaks=seq(-60,160,20),
     col=RdYlGn12_9positiv,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in npp \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("7B_npp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("7B_npp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)




##### 8. 8A: NEP SSP126 ######
####### 1530 ######
all_objects <- ls()
list126_1530 <- grep("NEP.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
NEP_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                               rs126_4 + rs126_5 + rs126_6 +
                               rs126_7 + rs126_8 + rs126_9 +
                               rs126_10 + rs126_11) /11


####### 85100 ######
all_objects <- ls()
list126_85100 <- grep("NEP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
NEP_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                rs126_4 + rs126_5 + rs126_6 +
                                rs126_7 + rs126_8 + rs126_9 +
                                rs126_10 + rs126_11) /11



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(NEP_SSP126_ENSEMBLE_1530, 
     main= paste("Mean NEP flux 2015-2030 // SSP126 // ENSEMBLE (11)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_NEP_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(NEP_SSP126_ENSEMBLE_85100, 
     main= paste("Mean NEP flux 2085-2100 // SSP126 // ENSEMBLE (11)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_NEP_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange ########
all_objects <- ls()
list126_abschange <- grep("NEP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nep_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP126_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     #main= paste("Mean nep change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     #col=RdYlGn,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
     col=nepnbp_change,
     breaks=round(seq(-4,4,0.5), digits = 2),
     #breaks=round(seq(-3e-08, 3e-08,0.5e-08), digits = 10),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_nep_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8A_nep_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


####### relchange ########
all_objects <- ls()
list126_relchange <- grep("NEP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nep_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11) /11
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (11)"),
     breaks=seq(-240,240,40),
     col=RdYlGn12,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8A_nep_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8A_nep_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


##### 8. 8B: NEP SSP585 ######
all_objects <- ls()
list585_1530 <- grep("NEP.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NEP_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11+rs585_12+rs585_13) /13


####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("NEP.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NEP_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                                rs585_4 + rs585_5 + rs585_6 +
                                rs585_7 + rs585_8 + rs585_9 +
                                rs585_10 + rs585_11+rs585_12+rs585_13) /13
####### 85100 ######
all_objects <- ls()
list585_85100 <- grep("NEP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NEP_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11+rs585_12+rs585_13) /13



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(NEP_SSP585_ENSEMBLE_1530, 
     main= paste("Mean NEP flux 2015-2030 // SSP585 // ENSEMBLE (11)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_NEP_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(NEP_SSP585_ENSEMBLE_85100, 
     main= paste("Mean NEP flux 2085-2100 // SSP585 // ENSEMBLE (11)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_NEP_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange ########
all_objects <- ls()
list585_abschange <- grep("NEP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nep_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + rs585_13) /13
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP585_ENSEMBLE_abschange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     #main= paste("Mean nep change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (13)"),
     #col=RdYlGn,
     #breaks=round(seq(-6e-07, 6e-07,1e-07), digits = 10),
     col=nepnbp_change,
     breaks=round(seq(-4,4,0.5), digits = 2),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NEP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_nep_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8B_nep_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

####### relchange ########
all_objects <- ls()
list585_relchange <- grep("NEP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nep_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + rs585_13) /13
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nep_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nep,nep,NEP,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nep change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (13)"),
     breaks=seq(-240,240,40),
     col=RdYlGn12,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NEP \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("8B_nep_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("8B_nep_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)


##### 9. 9A: NBP SSP126 ######
####### 1530 ######
all_objects <- ls()
list126_1530 <- grep("NBP.*SSP126.*t1530", all_objects, value=TRUE)
list126_1530 <- grep("ENSEMBLE", list126_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_1530[14])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_1530[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_1530[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_1530[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_1530[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_1530[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_1530[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_1530[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_1530[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_1530[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_1530[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_1530[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_1530[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_1530[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_1530[14])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
NBP_SSP126_ENSEMBLE_1530 <- (rs126_1 + rs126_2 + rs126_3 +
                               rs126_4 + rs126_5 + rs126_6 +
                               rs126_7 + rs126_8 + rs126_9 +
                               rs126_10 + rs126_11+rs126_12+rs126_13+rs126_14) /14


####### 85100 ######
all_objects <- ls()
list126_85100 <- grep("NBP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
NBP_SSP126_ENSEMBLE_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                               rs126_4 + rs126_5 + rs126_6 +
                               rs126_7 + rs126_8 + rs126_9 +
                               rs126_10 + rs126_11+rs126_12+rs126_13+rs126_14) /14



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(NBP_SSP126_ENSEMBLE_1530, 
     main= paste("Mean NBP flux 2015-2030 // SSP126 // ENSEMBLE (14)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_NBP_SSP126_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(NBP_SSP126_ENSEMBLE_85100, 
     main= paste("Mean NBP flux 2085-2100 // SSP126 // ENSEMBLE (14)"),
     col=RdYlGn12,
     breaks=round(seq(-2.4,2.4,0.4),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_NBP_SSP126_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange ########
all_objects <- ls()
list126_abschange <- grep("NBP.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")

all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nbp_SSP126_ENSEMBLE_abschange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 + rs126_13 + rs126_14) /14
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP126_ENSEMBLE_abschange1530_85100, # *12 im (neuen) Durchlauf (19.7) bereits angewendet
     main= paste("Mean nbp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (14)"),
     col=nepnbp_change,
     breaks=round(seq(-4,4,0.5), digits = 2),
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_nbp_SSP126_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9A_nbp_SSP126_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)



####### relchange ########

all_objects <- ls()
list126_relchange <- grep("NBP.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("ENSEMBLE", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs126", all_objects, value=TRUE)
nbp_SSP126_ENSEMBLE_relchange1530_85100 <- (rs126_1 + rs126_2 + rs126_3 +
                                              rs126_4 + rs126_5 + rs126_6 +
                                              rs126_7 + rs126_8 + rs126_9 +
                                              rs126_10 + rs126_11 + rs126_12 + rs126_13 + rs126_14) /14
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP126_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nbp,nbp,nbp,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nbp change // SSP126\n2015-2030 vs. 2085-2100 // ENSEMBLE (14)"),
     breaks=seq(-240,240,40),
     col=RdYlGn12,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[%]", cex=1, adj=0, srt = 0)
text(x = corners[2]-30, y = corners[4]-10, 
     "Achtung: problematische Prozentrechnung!", col='red', cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9A_nbp_SSP126_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9A_nbp_SSP126_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)

##### 9. 9B: NBP SSP585 ######
####### 1530 ######
all_objects <- ls()
list585_1530 <- grep("NBP.*SSP585.*t1530", all_objects, value=TRUE)
list585_1530 <- grep("ENSEMBLE", list585_1530, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_1530[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_1530[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_1530[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_1530[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_1530[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_1530[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_1530[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_1530[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_1530[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_1530[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_1530[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_1530[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_1530[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_1530[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_1530[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_1530[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_1530[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_1530[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NBP_SSP585_ENSEMBLE_1530 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11+rs585_12+rs585_13+rs585_14+rs585_15+rs585_16) /16


####### 85100 ######
all_objects <- ls()
list585_85100 <- grep("NBP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_85100[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
NBP_SSP585_ENSEMBLE_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                               rs585_4 + rs585_5 + rs585_6 +
                               rs585_7 + rs585_8 + rs585_9 +
                               rs585_10 + rs585_11+rs585_12+rs585_13+rs585_14+rs585_15+rs585_16) /16



####### plot 1530+851000 ######
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/ENSEMBLE/1530 und 85100')
plot(NBP_SSP585_ENSEMBLE_1530, 
     main= paste("Mean NBP flux 2015-2030 // SSP585 // ENSEMBLE (14)"),
     col=RdYlGn12,
     breaks=round(seq(-3,3,0.5),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_NBP_SSP585_1530.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

plot(NBP_SSP585_ENSEMBLE_85100, 
     main= paste("Mean NBP flux 2085-2100 // SSP585 // ENSEMBLE (14)"),
     col=RdYlGn12,
     breaks=round(seq(-3,3,0.5),digits=3),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent) # es ist kein CHANGE mehr, sondern immer ein POSITIVER FLUX, d.h. keine negaiven Werte möglich
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_NBP_SSP585_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)






####### abschange #####
all_objects <- ls()
list585_abschange <- grep("NBP.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nbp_SSP585_ENSEMBLE_abschange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + 
                                              rs585_13 + rs585_14 + rs585_15 + rs585_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP585_ENSEMBLE_abschange1530_85100, # *12 im (neuen) Durchlauf (19.7) bereits angewendet
     main= paste("Mean nbp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     col=nepnbp_change,
     breaks=round(seq(-4,4,0.5), digits = 2),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in NBP flux\n[Mg C/ha/yr]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_nbp_SSP585_abschange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9B_nbp_SSP585_abschange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)
####### relchange ########
all_objects <- ls()
list585_relchange <- grep("NBP.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("ENSEMBLE", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")


all_objects <- ls()
list_resample <- grep("rs585", all_objects, value=TRUE)
nbp_SSP585_ENSEMBLE_relchange1530_85100 <- (rs585_1 + rs585_2 + rs585_3 +
                                              rs585_4 + rs585_5 + rs585_6 +
                                              rs585_7 + rs585_8 + rs585_9 +
                                              rs585_10 + rs585_11 + rs585_12 + 
                                              rs585_13 + rs585_14 + rs585_15 + rs585_16) /16
#neu
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE")
par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
plot(nbp_SSP585_ENSEMBLE_relchange1530_85100, # *12 muss unbedingt wieder raus, sobald die Single Models im Durchlauf für nbp,nbp,nbp,NBP auf jährliche Werte multipliziert wurden
     main= paste("Mean nbp change // SSP585\n2015-2030 vs. 2085-2100 // ENSEMBLE (16)"),
     breaks=seq(-240,240,40),
     col=RdYlGn12,
     #col=brewer.pal(10, "RdYlGn"),
     las=1,
     cex.main=1, cex.lab=0.75, cex.axis=0.75,
     legend=TRUE,
     ext = plot_extent)
lines(amazon_rivers, col=alpha('lightblue', 0.6))
lines(country_boundaries, col='grey65')
lines(amazon_biome, lwd=0.5, col='grey30')
par(xpd = TRUE) #Draw outside plot area
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
text(x = corners[2]+2, y = corners[4]-4, 
     "Change in nbp \n[%]", cex=1, adj=0, srt = 0)
dev.print(jpeg, paste("9B_nbp_SSP585_relchange1530_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
setwd(dir = "E:/Masterarbeit/Data/PLOTS/ENSEMBLE/HR")
dev.print(jpeg, file = paste("9B_nbp_SSP585_relchange1530_85100_HR.jpg",sep="_"), 
          quality=100, width=2000, height=1410, res=250, pointsize=12)















##########################################################
####### PANEL PLOTS #######
##### check out a few things ####
par(mfrow = c(2, 3))
par(cex = 0.6)
par(mar = c(3, 3, 0, 0), oma = c(1, 1, 1, 1))
for (i in 1:6) {
  plot(1, 1, type = "n")
  mtext(letters[i], side = 3, line = -1, adj = 0.1, cex = 0.6)
  }

# nice panel shell
par(mfrow = c(4, 4))
par(cex = 0.6)
par(mar = c(0, 0, 0, 0), oma = c(4, 4, 0.5, 2.5))
par(tcl = -0.25)
par(mgp = c(2, 0.6, 0))
for (i in 1:length(list126_abschange)) {
  plot(1, axes = FALSE, type = "n") # hier ist der eigentliche plot?
  mtext(letters[i], side = 3, line = -1, adj = 0.1, cex = 0.6, col = "grey40")
  if (i %in% c(13, 14, 15, 16))
    axis(1, col = "grey40", col.axis = "grey20", at = seq(0.6, 1.2, 0.2))
  if (i %in% c(1, 5, 9, 13))
    axis(2, col = "grey40", col.axis = "grey20", at = seq(0.6, 1.2, 0.2))
  box(col = "grey60")
}
mtext("Latitude", side = 1, outer = TRUE, cex = 0.7, line = 2.2, col = "grey20")
mtext("Longitude", side = 2, outer = TRUE, cex = 0.7, line = 2.2, col = "grey20")

####################### LEVELPLOT #######################
##### 1A. cVeg SSP1 abschange #######
all_objects <- ls()
list126_abschange <- grep("CVEG.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("BGC", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen

new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_abschange[16])), sample_raster, method="bilinear")

stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     rs126_12,
                     rs126_13,
                     rs126_14,
                     rs126_15,
                     rs126_16,
                     cVeg_SSP126_ENSEMBLE_abschange1530_85100)
#rs126_17)
# Levelplot
cv_breaks <- c(-170,-150,-130,-110,-90,-70,-50,-30,-10,10,30,50,70,90,110,130,150,170)
cv_labels <- c(-170,"",-130,"",-90,"",-50,"",-10,10,"",50,"",90,"",130,"",170)
# von 17 auf 16
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MPIESM12LR","NorESM2LM","NorESM2MM","UKESM10LL","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_cVeg_SSP1_abschange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)

par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs126*10, # Vorsicht!! *10 NUR FÜR cVeg !!!!
          #main = "CVEG Abschange // SSP126", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          at = cv_breaks,
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change, # color ramp
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (MgC/ha)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP1_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
##### 1A. cVeg SSP1 relchange ######
all_objects <- ls()
list126_relchange <- grep("CVEG.*SSP126.*relchange", all_objects, value=TRUE)
list126_relchange <- grep("BGC", list126_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list126_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[14])), new_extent, keepres = TRUE)

setExtent(get(paste(list126_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_relchange[16])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_relchange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_relchange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_relchange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_relchange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_relchange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_relchange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_relchange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_relchange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_relchange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_relchange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_relchange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_relchange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_relchange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_relchange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_relchange[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_relchange[16])), sample_raster, method="bilinear")
# reclassify MRI-ESM to 501% change values with matrix(m)
# all values > 500 and <= 8743.284 become 501, etc.

stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     rs126_12,
                     rs126_13,
                     rs126_14,
                     rs126_15,
                     rs126_16,
                     cVeg_SSP126_ENSEMBLE_relchange1530_85100)#,
m <- c(50, 100, 70,
       100,200, 90,
       200,500,110,
       500, Inf, 130)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs126 <- reclassify(stack_rs126, rclmat)
#rs126_17)
# Levelplot
#cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,550)
cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50, 70,  90,110,130)
cv_labels <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,">500")
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MPIESM12LR","NorESM2LM","NorESM2MM","UKESM10LL","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right

#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_cVeg_SSP1_relchange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs126, # Vorsicht!! *10 das war nur für cVeg
          #main = "CVEG Abschange // SSP126", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change2, # color ramp
          #pretty=TRUE,
          at = cv_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (%)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP1_relchange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
##### 1B. cVeg SSP5 abschange #######
all_objects <- ls()
list585_abschange <- grep("CVEG.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("BGC", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen

new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")

rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_abschange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_abschange[17])), sample_raster, method="bilinear")
stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     rs585_14,
                     rs585_15,
                     rs585_16,
                     rs585_17,
                     cVeg_SSP585_ENSEMBLE_abschange1530_85100)
# Levelplot
cv_breaks <- c(-170,-150,-130,-110,-90,-70,-50,-30,-10,10,30,50,70,90,110,130,150,170)
cv_labels <- c(-170,"",-130,"",-90,"",-50,"",-10,10,"",50,"",90,"",130,"",170)
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MRIESM20","MPIESM12LR","NorESM2LM","NorESM2MM","UKESM10LL","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_cVeg_SSP5_abschange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs585*10, # Vorsicht!! *10 NUR FÜR cVeg !!!!
          #main = "CVEG Abschange // SSP585", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          at = cv_breaks,
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change, # color ramp
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (MgC/ha)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP5_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

##### 1B. cVeg SSP5 relchange #######

all_objects <- ls()
list585_relchange <- grep("CVEG.*SSP585.*relchange", all_objects, value=TRUE)
list585_relchange <- grep("BGC", list585_relchange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[14])), new_extent, keepres = TRUE)

setExtent(get(paste(list585_relchange[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[16])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[17])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_relchange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_relchange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_relchange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_relchange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_relchange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_relchange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_relchange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_relchange[13])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_relchange[14])), sample_raster, method="bilinear")

rs585_15 <- resample(get(paste(list585_relchange[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_relchange[16])), sample_raster, method="bilinear")
rs585_17 <- resample(get(paste(list585_relchange[17])), sample_raster, method="bilinear")
# reclassify MRI-ESM to 501% change values with matrix(m)
# all values > 500 and <= 8743.284 become 501, etc.

stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     rs585_14,
                     rs585_15,
                     rs585_16,
                     rs585_17,
                     cVeg_SSP585_ENSEMBLE_relchange1530_85100)#,
m <- c(50, 100, 70,
       100,200, 90,
       200,500,110,
       500, Inf, 130)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs585 <- reclassify(stack_rs585, rclmat)
#rs585_17)
# Levelplot
#cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,550)
cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50, 70,  90,110,130)
cv_labels <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,">500")
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MRIESM20","MPIESM12LR","NorESM2LM","NorESM2MM","UKESM10LL","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_cVeg_SSP5_relchange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)


par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))

levelplot(x=stack_rs585, # Vorsicht!! *10 das war nur für cVeg
          #main = "CVEG Abschange // SSP585", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change2, # color ramp
          #pretty=TRUE,
          at = cv_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (%)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP5_relchange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


#check
levelplot(rs585_7,
          margin = FALSE,
          layout = c(1,1),
          col.regions = viridis(30))
            #cv_change2) #4 rows, 4 columns

##### 2A. treeFrac SSP1 abschange
all_objects <- ls()
list126_abschange <- grep("treeFrac.*SSP126.*abschange", all_objects, value=TRUE)
list126_abschange <- grep("BGC", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
list126_abschange <- grep("ENSEMBLE", list126_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen


new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list126_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_abschange[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_abschange[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_abschange[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_abschange[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_abschange[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_abschange[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_abschange[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_abschange[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_abschange[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_abschange[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_abschange[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_abschange[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_abschange[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_abschange[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_abschange[15])), sample_raster, method="bilinear")
treefrac_ensemble_ssp1 <- (rs126_1+
                          rs126_2+
                          rs126_3+
                          rs126_4+
                          rs126_5+
                          rs126_6+
                          rs126_7+
                          rs126_8+
                          rs126_9+
                          rs126_10+
                          rs126_11+
                          rs126_12+
                          rs126_13+
                          rs126_14+
                          rs126_15)/15
stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     rs126_12,
                     rs126_13,
                     rs126_14,
                     rs126_15,
                     treefrac_ensemble_ssp1)#,
                     #treeFrac_SSP126_ENSEMBLE_abschange1530_85100)



#tf_breaks <- seq(-55,55,10)
tf_breaks <- c(-30,-25,-20,-15,-10,-5,5,10,15,20,25,30)

tf_labels <- c(-30,-25,-20,-15,-10,-5,5,10,15,20,25,30)

# von 17 auf 16
labels <- c("ACCESSCM2","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMCM61", "CNRMESM21",
            "ECEarth3Veg","HadGEM3GC31LL", "INMCM48","INMCM50","IPSLCM6ALR","MPIESM12HR",
            "MPIESM12LR","UKESM10LL", "ENSEMBLE MEAN")#,"ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_treeFrac_SSP1_abschange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)

par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs126, # Vorsicht!! *10 NUR FÜR treeFrac !!!!
          #main = "treeFrac Abschange // SSP126", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(4,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          at = tf_breaks,
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = RdBu11, # color ramp
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=tf_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=tf_breaks, 
                                    labels=tf_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (MgC/ha)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_treeFrac_SSP1_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

##### 2B. treeFrac SSP5 abschange
all_objects <- ls()
list585_abschange <- grep("treeFrac.*SSP585.*abschange", all_objects, value=TRUE)
list585_abschange <- grep("BGC", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
list585_abschange <- grep("ENSEMBLE", list585_abschange, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen


new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[15])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_abschange[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_abschange[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_abschange[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_abschange[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_abschange[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_abschange[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_abschange[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_abschange[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_abschange[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_abschange[15])), sample_raster, method="bilinear")
treefrac_ensemble_ssp5 <- (rs585_1+
                             rs585_2+
                             rs585_3+
                             rs585_4+
                             rs585_5+
                             rs585_6+
                             rs585_7+
                             rs585_8+
                             rs585_9+
                             rs585_10+
                             rs585_11+
                             rs585_12+
                             rs585_13+
                             rs585_14+
                             rs585_15)/15
stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     rs585_14,
                     rs585_15,
                     treefrac_ensemble_ssp5)#,
#treeFrac_SSP526_ENSEMBLE_abschange1530_85100)


tf_breaks <- c(-30,-25,-20,-15,-10,-5,5,10,15,20,25,30)

tf_labels <- c(-30,-25,-20,-15,-10,-5,5,10,15,20,25,30)

# von 17 auf 16
labels <- c("ACCESSCM2","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMCM61", "CNRMESM21",
            "ECEarth3Veg","HadGEM3GC31LL", "INMCM48","INMCM50","IPSLCM6ALR","MPIESM12HR",
            "MPIESM12LR","UKESM10LL", "ENSEMBLE MEAN")#,"ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
png(filename="PAN_treeFrac_SSP5_abschange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=8, 
    pointsize=12, 
    res=600)

par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs585, # Vorsicht!! *10 NUR FÜR treeFrac !!!!
          main = "treeFrac Abschange // SSP526", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(4,4), #4 rows, 4 columns
          between = list(x=0.2, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          at = tf_breaks,
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = '#d6f0ff'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = RdBu11, # color ramp
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=tf_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=tf_breaks, 
                                    labels=tf_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (MgC/ha)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_treeFrac_SSP5_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

##### 3. cVeg SSP5-BGC abschange ######
all_objects <- ls()
list585_abschange <- grep("CVEG.*SSP585.*abschange", all_objects, value=TRUE)

new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)
setExtent(get(paste(list585_abschange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_abschange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_abschange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_abschange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_abschange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_abschange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_abschange[5])), sample_raster, method="bilinear")
stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5)
m <- c(170, 200, 185,
       200,Inf, 200)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs585 <- reclassify(stack_rs585, rclmat)

# Levelplot
cv_breaks <- c(-130,-110,-90,-70,-50,-30,-10,10,30,50,70,90,110,130,150,170,185,200)
cv_labels <- c(-130,"",-90,"",-50,"",-10,10,"",50,"",90,"",130,"",170,200,235)
labels <- c("CanESM5","CNRMESM21","MIROCES2L","MRIESM20","UKESM10LL")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 0), oma = c(1, 0.5, 1, 0.5))
levelplot(x=stack_rs585*10, # Vorsicht!! *10 NUR FÜR cVeg !!!!
          main = "", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(3,2), #4 columns, 4 rows
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          at = cv_breaks,
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'transparent'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change_bgc, # color ramp
          colorkey=list(space = 'right',
                        height=1, width=1, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (MgC/ha)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(1.0, "npc"), gp=gpar(fontsize=12, font=2))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP5-BGC_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

##### 3. cVeg SSP5-BGC relchange #######
all_objects <- ls()
list585_relchange <- grep("CVEG.*SSP585.*relchange", all_objects, value=TRUE)
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

## kann ich nicht schon am Ende von jedem single model run
## den extent und das resample machen? dann muss ich hier ja nur noch den mean und die standard deviation (oa...) berechnen
setExtent(get(paste(list585_relchange[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_relchange[5])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_relchange[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_relchange[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_relchange[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_relchange[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_relchange[5])), sample_raster, method="bilinear")
# reclassify MRI-ESM to 501% change values with matrix(m)
# all values > 500 and <= 8743.284 become 501, etc.

stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5)
m <- c(50, 100, 70,
       100,200, 90,
       200,500,110,
       500, Inf, 130)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs585 <- reclassify(stack_rs585, rclmat)
#rs585_17)
# Levelplot
#cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,550)
cv_breaks <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50, 70,  90,110,130)
cv_labels <- c(-100,-90,-70,-50,-30,-20,-10,10,20,30,50,100,200,500,">500")
labels <- c("CanESM5","CNRMESM21","MIROCES2L","MRIESM20","UKESM10LL")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 0), oma = c(1, 0.5, 1, 0.5))
levelplot(x=stack_rs585, # Vorsicht!! *10 das war nur für cVeg
          #main = "CVEG Abschange // SSP585", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(3,2), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'transparent'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = cv_change2, # color ramp
          #pretty=TRUE,
          at = cv_breaks,
          colorkey=list(space = 'right',
                        height=1, width=1.3, # height and width of colorbar
                        at=cv_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=cv_breaks, 
                                    labels=cv_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Change in Vegetation Carbon (%)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.98, "npc"), gp=gpar(fontsize=12, font=2))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP5-BGC_relchange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


##### 1AB. cVeg SSP1+SSP5 85100 #### 
# Die rs126 kommen von resample in Teil cVeg SSP1 1.A
# D.h.: Jedes Single Model einer VSC resamplen, dann hier stacken und in levelplot in das Panel integrieren
stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     rs126_12,
                     rs126_13,
                     rs126_14,
                     rs126_15,
                     rs126_16)

stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     rs585_14,
                     rs585_15,
                     rs585_16,
                     rs585_17)

# Levelplot
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 0), oma = c(1, 0.5, 1, 0.5))
levelplot(x=stack_rs126, # Vorsicht!! *10 das war nur für cVeg
          main = "CVEG 2085-2100 // SSP126", cex=1, font=1,
          layout = c(4,4), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'transparent'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = green_pal, # color ramp
          colorkey=list(space = 'bottom',
                        height=1, width=1, # height and width of colorbar
                        at=seq(0,450,30), # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=seq(0,450,30), 
                                    labels=seq(0,450,30),
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
                        ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          xlab = "",
          ylab = "",
          names.attr = c("ACCESSESM15","BCCCSM2MR","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg",
                         "INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MPIESM12LR","NorESM2LM","NorESM2MM","UKESM10LL")
          )
grid::grid.text('Vegetation Carbon [MgC/ha]', y=unit(0.08, "npc"), #how to adjust fontface and size for legend title
                rot=0, x=unit(0.5, "npc"), gp=gpar(fontsize=12, font=1))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_cVeg_SSP1_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


##### 9B. NBP SSP5 85100 ######
all_objects <- ls()
list585_85100 <- grep("NBP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
rs585_14 <- resample(get(paste(list585_85100[14])), sample_raster, method="bilinear")
rs585_15 <- resample(get(paste(list585_85100[15])), sample_raster, method="bilinear")
rs585_16 <- resample(get(paste(list585_85100[16])), sample_raster, method="bilinear")
stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     rs585_14,
                     rs585_15,
                     rs585_16,
                     NBP_SSP585_ENSEMBLE_85100)#
# all values > 4.5 and smaller -4.5 become 4.5 bzw. -4.5 etc.
m <- c(-Inf, -4.5, -4.5,
       4.5,Inf,4.5)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs585 <- reclassify(stack_rs585, rclmat)

# Levelplot
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')

png(filename="PAN_NBP_SSP5_85100.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)

nbp_breaks <- seq(-4.5,4.5,(9/18)) #seq(min(range),max(range,wieviele Unterteilungen es geben soll, 
nbp_labels <- c("<-5",-4,"",-3,"",-2,"",-1,"",0,"",1,"",2,"",3,"",4,">5")
labels <- c("ACCESSESM15","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CMCCCM2SR5","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MPIESM12LR","MRIESM20","NorESM2LM","NorESM2MM","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs585, # Vorsicht!! *10 das war nur für NBP
          #main = "NBP 85100 // SSP585", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,4), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = nbp_change, # color ramp
          #pretty=TRUE,
          at = nbp_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=nbp_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=nbp_breaks, 
                                    labels=nbp_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Mean Annual NBP flux (MgC/ha/yr)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_NBP_SSP5_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
##### 9A. NBP SSP1 85100 ######
all_objects <- ls()
list126_85100 <- grep("NBP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[13])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[14])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[15])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[16])), new_extent, keepres = TRUE)


sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
rs126_12 <- resample(get(paste(list126_85100[12])), sample_raster, method="bilinear")
rs126_13 <- resample(get(paste(list126_85100[13])), sample_raster, method="bilinear")
rs126_14 <- resample(get(paste(list126_85100[14])), sample_raster, method="bilinear")
rs126_15 <- resample(get(paste(list126_85100[15])), sample_raster, method="bilinear")
rs126_16 <- resample(get(paste(list126_85100[16])), sample_raster, method="bilinear")
stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     rs126_12,
                     rs126_13,
                     rs126_14,
                     NBP_SSP126_ENSEMBLE_85100)
# all values > 4.5 and smaller -4.5 become 4.5 bzw. -4.5 etc.
m <- c(-Inf, -4.5, -4.5,
       4.5,Inf,4.5)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs126 <- reclassify(stack_rs126, rclmat)

# Levelplot
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')

png(filename="PAN_NBP_SSP5_85100.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)
nbp_breaks <- seq(-4.5,4.5,(9/18)) #seq(min(range),max(range,wieviele Unterteilungen es geben soll, 
nbp_labels <- c("<-5",-4,"",-3,"",-2,"",-1,"",0,"",1,"",2,"",3,"",4,">5")
labels <- c("ACCESSESM15","CanESM5","CanESM5CanOE","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","INMCM48","INMCM50","IPSLCM6ALR","MIROCES2L","MPIESM12LR","NorESM2LM","NorESM2MM","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs126, # Vorsicht!! *10 das war nur für NBP
          #main = "NBP 85100 // SSP126", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,3), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = nbp_change, # color ramp
          #pretty=TRUE,
          at = nbp_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=nbp_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=nbp_breaks, 
                                    labels=nbp_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Mean Annual NBP flux (MgC/ha/yr)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_NBP_SSP1_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)


##### 8B. NEP SSP5 85100 ######
all_objects <- ls()
list585_85100 <- grep("NEP.*SSP585.*t85100", all_objects, value=TRUE)
list585_85100 <- grep("ENSEMBLE", list585_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list585_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[11])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[12])), new_extent, keepres = TRUE)
setExtent(get(paste(list585_85100[13])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs585_1 <- resample(get(paste(list585_85100[1])), sample_raster, method="bilinear")
rs585_2 <- resample(get(paste(list585_85100[2])), sample_raster, method="bilinear")
rs585_3 <- resample(get(paste(list585_85100[3])), sample_raster, method="bilinear")
rs585_4 <- resample(get(paste(list585_85100[4])), sample_raster, method="bilinear")
rs585_5 <- resample(get(paste(list585_85100[5])), sample_raster, method="bilinear")
rs585_6 <- resample(get(paste(list585_85100[6])), sample_raster, method="bilinear")
rs585_7 <- resample(get(paste(list585_85100[7])), sample_raster, method="bilinear")
rs585_8 <- resample(get(paste(list585_85100[8])), sample_raster, method="bilinear")
rs585_9 <- resample(get(paste(list585_85100[9])), sample_raster, method="bilinear")
rs585_10 <- resample(get(paste(list585_85100[10])), sample_raster, method="bilinear")
rs585_11 <- resample(get(paste(list585_85100[11])), sample_raster, method="bilinear")
rs585_12 <- resample(get(paste(list585_85100[12])), sample_raster, method="bilinear")
rs585_13 <- resample(get(paste(list585_85100[13])), sample_raster, method="bilinear")
stack_rs585 <- stack(rs585_1,
                     rs585_2,
                     rs585_3,
                     rs585_4,
                     rs585_5,
                     rs585_6,
                     rs585_7,
                     rs585_8,
                     rs585_9,
                     rs585_10,
                     rs585_11,
                     rs585_12,
                     rs585_13,
                     NEP_SSP585_ENSEMBLE_85100)#,
                    # reclassify change values with matrix(m)
# all values > 4.5 and smaller -4.5 become 4.5 bzw. -4.5 etc.
m <- c(-Inf, -4.5, -4.5,
       4.5,Inf,4.5)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs585 <- reclassify(stack_rs585, rclmat)

# Levelplot
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
png(filename="PAN_NEP_SSP5_85100.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)
NEP_breaks <- seq(-4.5,4.5,(9/18)) #seq(min(range),max(range,wieviele Unterteilungen es geben soll, 
NEP_labels <- c("<-5",-4,"",-3,"",-2,"",-1,"",0,"",1,"",2,"",3,"",4,">5")
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CESM2","CESM2WACCM","CMCCCM2SR5","CNRMESM21","ECEarth3Veg","IPSLCM6ALR","MPIESM12LR","MRIESM20","NorESM2LM","NorESM2MM","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs585, # Vorsicht!! *10 das war nur für NEP
          #main = "NEP 85100 // SSP585", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,3), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = nbp_change, # color ramp
          #pretty=TRUE,
          at = NEP_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=NEP_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=NEP_breaks, 
                                    labels=NEP_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels
)
grid::grid.text('Mean Annual NEP flux (MgC/ha/yr)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
dev.off()
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_NEP_SSP5_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
##### 8A. NEP SSP1 85100 ######
all_objects <- ls()
list126_85100 <- grep("NEP.*SSP126.*t85100", all_objects, value=TRUE)
list126_85100 <- grep("ENSEMBLE", list126_85100, value=TRUE, invert = TRUE) # potenzielles ENSEMBLE objekt entfernen
new_extent <- extent(-82, -42, -20, 11) # extent in form of: vector (length=4; order= xmin, xmax, ymin, ymax)

setExtent(get(paste(list126_85100[1])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[2])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[3])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[4])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[5])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[6])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[7])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[8])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[9])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[10])), new_extent, keepres = TRUE)
setExtent(get(paste(list126_85100[11])), new_extent, keepres = TRUE)

sample_raster <- raster(nrow=310, ncol=400, ext = new_extent, # 310,400 (rows,cols) = 0.1° genau.
                        crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
rs126_1 <- resample(get(paste(list126_85100[1])), sample_raster, method="bilinear")
rs126_2 <- resample(get(paste(list126_85100[2])), sample_raster, method="bilinear")
rs126_3 <- resample(get(paste(list126_85100[3])), sample_raster, method="bilinear")
rs126_4 <- resample(get(paste(list126_85100[4])), sample_raster, method="bilinear")
rs126_5 <- resample(get(paste(list126_85100[5])), sample_raster, method="bilinear")
rs126_6 <- resample(get(paste(list126_85100[6])), sample_raster, method="bilinear")
rs126_7 <- resample(get(paste(list126_85100[7])), sample_raster, method="bilinear")
rs126_8 <- resample(get(paste(list126_85100[8])), sample_raster, method="bilinear")
rs126_9 <- resample(get(paste(list126_85100[9])), sample_raster, method="bilinear")
rs126_10 <- resample(get(paste(list126_85100[10])), sample_raster, method="bilinear")
rs126_11 <- resample(get(paste(list126_85100[11])), sample_raster, method="bilinear")
stack_rs126 <- stack(rs126_1,
                     rs126_2,
                     rs126_3,
                     rs126_4,
                     rs126_5,
                     rs126_6,
                     rs126_7,
                     rs126_8,
                     rs126_9,
                     rs126_10,
                     rs126_11,
                     NEP_SSP126_ENSEMBLE_85100)#,
# reclassify change values with matrix(m)
# all values > 5 and smaller -5 become 5.5 bzw. -5.5 etc.
m <- c(-Inf, -4.5, -4.5,
       4.5,Inf,4.5)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
stack_rs126 <- reclassify(stack_rs126, rclmat)

# Levelplot
#NEP_breaks <- c(-5,-4,-3.5,-3,-2.5,-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5,3,3.5,4,5)

png(filename="PAN_NEP_SSP1_85100.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)
NEP_breaks <- seq(-4.5,4.5,(9/18)) #seq(min(range),max(range,wieviele Unterteilungen es geben soll, 
# also abhg von Zahl der Farben.)) Hier kann ich einfach range/Anzahl Farben eingeben
NEP_labels <- c("<-5",-4,"",-3,"",-2,"",-1,"",0,"",1,"",2,"",3,"",4,">5")
labels <- c("ACCESSESM15","BCCCSM2MR","CanESM5","CESM2","CESM2WACCM","CNRMESM21","ECEarth3Veg","IPSLCM6ALR","MPIESM12LR","NorESM2LM","NorESM2MM","ENSEMBLE MEAN")
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
par(mar = c(0, 0, 0, 4), oma = c(0, 0, 0, 14))
levelplot(x=stack_rs126, # Vorsicht!! *10 das war nur für NEP
          #main = "NEP 85100 // SSP185", cex=1, font=1,
          xlab=NULL, ylab=NULL,
          layout = c(5,3), #4 rows, 4 columns
          between = list(x=0, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent')), 
          col.regions = nbp_change, # color ramp
          #pretty=TRUE,
          at = NEP_breaks,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        at=NEP_breaks, # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=NEP_breaks, 
                                    labels=NEP_labels,
                                    cex=1, font=1),
                        axis.line = list(col='grey60') # make black box around color bar
          ), # unit text right of legend
          scales = list(draw=FALSE), # col = 'transparent'),
          names.attr = labels, cex=0.9
)
grid::grid.text('Mean Annual NEP flux (MgC/ha/yr)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
                rot=270, x=unit(0.99, "npc"), gp=gpar(fontsize=12, font=2))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.off()
dev.print(jpeg, paste("PAN_NEP_SSP1_85100.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)
#########################################################
####(klappt nicht)####

par(mfrow = c(4, 4))
par(cex = 0.6)
par(mar = c(0, 0, 0, 0), oma = c(2, 2, 0.5, 0.5))
par(tcl = -0.25)
par(mgp = c(2, 0.6, 0))
box(col = "grey60")
mtext("Latitude", side = 1, outer = TRUE, cex = 0.7, line = 2.2, col = "grey20") 
mtext("Longitude", side = 2, outer = TRUE, cex = 0.7, line = 2.2, col = "grey20")






##### PANEL #############################################
#### PRECIPITATION DIFFMAP ####
library(gridExtra)
p1 <- levelplot(r1)
p2 <- levelplot(r2)
print(p1, split=c(1,1,2,1), more=TRUE)
print(p2, split=c(2,1,2,1)) #1. column-position, 2.row-position, 3.number of columns, 4.number of rows

# split= takes a vector of four numbers. 
# The vector's 3rd and 4th elements give the number of columns and rows in the display, 
# while its 1st and 2nd elements give the column- and row-positions of the object being printed.
#1. column-position, 2.row-position, 3.number of columns, 4.number of rows
p1 <- levelplot(pr_abschange_ssp1,
                margin = FALSE,
                xlab=NULL, ylab=NULL, scales=list(col = 'transparent'),
                names.attr='SSP126',
                between = list(x=0, y=0), #.
                par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                                    strip.background = list(col = 'transparent'), 
                                    strip.border = list(col = 'transparent')), 
                col.regions=pr_change,
                colorkey=list(col = 'transparent',
                              space = 'right',
                              height=1, width=1, # height and width of colorbar
                              at=seq(-420,350,70), # sequence in color ramp
                              tri.upper = TRUE,
                              labels=list(at=seq(-420,350,70), 
                                          labels=seq(-420,350,70),
                                          cex=0, font=1, col ='transparent'),
                              axis.line = list(col='transparent') # make black box around color bar
                ))
p2 <- levelplot(pr_abschange_ssp5,
                margin = FALSE,
                xlab=NULL, ylab=NULL, scales=list(col = 'transparent'),
                names.attr='SSP585',
                between = list(x=0, y=0),
                par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                                    strip.background = list(col = 'transparent'), 
                                    strip.border = list(col = 'transparent')), 
                col.regions=pr_change,
                colorkey=list(space = 'right',
                              height=1, width=1, # height and width of colorbar
                              at=seq(-420,350,70), # sequence in color ramp
                              tri.upper = TRUE,
                              labels=list(at=seq(-420,350,70), 
                                          labels=seq(-420,350,70),
                                          cex=1, font=1),
                              axis.line = list(col='grey60') # make black box around color bar
                )) # unit text right of legend)
p3 <- levelplot(pr_relchange_ssp1,
                margin = FALSE,
                xlab=NULL, ylab=NULL, scales=list(col = 'transparent'),
                between = list(x=0, y=0), #.
                par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                                    strip.background = list(col = 'transparent'), 
                                    strip.border = list(col = 'transparent')), 
                col.regions=pr_change2,
                colorkey=list(col = 'transparent',
                              space = 'right',
                              height=1, width=1, # height and width of colorbar
                              at=seq(-22,22,4), # sequence in color ramp
                              tri.upper = TRUE,
                              labels=list(at=seq(-22,22,4), 
                                          labels=seq(-22,22,4),
                                          cex=0, font=1, col ='transparent'),
                              axis.line = list(col='transparent') # make black box around color bar
                ))
p4 <- levelplot(pr_relchange_ssp5,
                margin = FALSE,
                xlab=NULL, ylab=NULL, scales=list(draw=FALSE),
                between = list(x=0, y=0),
                par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                                    strip.background = list(col = 'transparent'), 
                                    strip.border = list(col = 'transparent')), 
                col.regions=pr_change2, # color ramp
                colorkey=list(space = 'right',
                              height=1, width=1, # height and width of colorbar
                              at=seq(-22,22,4), # sequence in color ramp
                              tri.upper = TRUE,
                              labels=list(at=seq(-22,22,4), 
                                          labels=seq(-22,22,4),
                                          cex=1, font=1),
                              axis.line = list(col='grey60') # make black box around color bar
                )) # unit text right of legend)

print(p1, split=c(1,1,2,2), more=TRUE) # ssp1 abschange - links oben
print(p2, split=c(2,1,2,2))            # ssp5 abschange - rechts oben
print(p3, split=c(1,2,2,2))            # ssp1 relchange - links unten
print(p4, split=c(2,2,2,2))            # ssp5 relchange - rechts unten
#draw box around graphic
box(which = "inner", lty = "solid", lwd=1, col='grey60')
# which character, one of "plot", "figure", "inner" and "outer".

#für alle margin = FALSE
#für die obere reihe: names.attr='SSP1'
#keine axis labels und ticks
levelplot(r, xlab=NULL, ylab=NULL, scales=list(draw=FALSE))
          
#axis labels und ticks nur links
levelplot(r, xlab=NULL, scales=list(x=list(draw=FALSE)))
          
#axis labels und ticks nur unten 
levelplot(r, ylab=NULL, scales=list(y=list(draw=FALSE)))

## trellis plot: 
# panel.width, panel.height	
# lists with 2 components, that should be valid x and units arguments to unit() 
# (the data argument cannot be specified currently, but can be considered for addition if needed). 
# The resulting unit object will be the width/height of each panel in the Lattice plot. 
# These arguments can be used to explicitly control the dimensions of the panel, 
# rather than letting them expand to maximize available space. Vector widths are allowed, 
# and can specify unequal lengths across rows or columns.

cellStats(pr_abschange_ssp1, stat='mean')
cellStats(pr_abschange_ssp5, stat='mean')

cellStats(pr_relchange_ssp1, stat='mean')
cellStats(pr_relchange_ssp5, stat='mean')


### Stack abschange ssp1+5 ####
stack_abschange <- stack(pr_abschange_ssp1,pr_abschange_ssp5)
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right

png(filename="PAN_pr_abschange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)

par(mar = c(0,0,0,0), oma = c(1, 0.5, 1, 0.5))
levelplot(x=stack_abschange, # Vorsicht!! *10 das war nur für cVeg
          margin = FALSE,
          xlab=NULL, ylab=list("absolute change", cex=1),
          #layers = 1,
          layout = c(2,1), #4 rows, 4 columns
          between = list(x=0.1, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent'),
                              panel.background=list(col="transparent"),
                              layout.widths = list(axis.key.padding = 0,
                                                   ylab.right = 2.5)), 
          col.regions=pr_change,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        strip.border = list(col = 'grey50'),
                        at=seq(-420,350,70), # sequence in color ramp
                        tri.upper = TRUE,
                        labels=list(at=seq(-420,350,70), 
                                    labels=seq(-420,350,70),
                                    cex=1, font=1,
                                    title="Change in Annual Precipitation (mm)", 
                                    row=3, column=1, vjust=2
                        )),
                        axis.line = list(col='grey60'), # make black box around color bar
           # unit text right of legend
          ylab.right = list('Change in Annual Precipitation (mm)', rot=270, cex=1),#, fontface='bold'),
          names.attr = c("SSP126", "SSP585"),
          cex = 1,
          scales = list(draw=FALSE)# col = 'transparent'),
          ) 
dev.off()          
#grid::grid.text('Change in Annual Precipitation (mm)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
#                rot=270, x=unit(1.0, "npc"), gp=gpar(fontsize=12, font=1))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_pr_abschange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)

### Stack relchange ssp1+5 ####
stack_relchange <- stack(pr_relchange_ssp1,pr_relchange_ssp5)
corners = par("usr") #Gets the four corners of plot area (x1, x2, y1, y2)
#par(mar=c(2,1.5,2,1.5))   # c(b,l,t,r) bottom,left,top,right
breaks_relchange <- c(-10,-7,-4,-1,1,4,7,10,13,16,19)

png(filename="PAN_pr_relchange.png", 
    type="cairo",
    units="in", 
    width=10.6, 
    height=6, 
    pointsize=12, 
    res=600)

par(mar = c(0,0,0,0), oma = c(1, 0.5, 1, 0.5))
levelplot(x=stack_relchange, # Vorsicht!! *10 das war nur für cVeg
          margin = FALSE,
          at = breaks_relchange,
          xlab=NULL, ylab=list("relative change", cex=1),
          layout = c(2,1), #4 rows, 4 columns
          #layers = 1, # nur den ersten layer plotten
          between = list(x=0.1, y=0), #between: A list with components code and code (both usually 0 by default), numeric vectors specifying the space between the panels (units are character heights). x and y are repeated to account for all panels in a page and any extra components are ignored.
          par.settings = list(axis.line = list(col = "transparent"), # remove background lines and layer name background colour
                              strip.background = list(col = 'grey90'), 
                              strip.border = list(col = 'transparent'),
                              panel.background=list(col="transparent"),
                              layout.widths = list(axis.key.padding = 0,
                                                   ylab.right = 2.5)), 
          #col.regions=RdBu10,
          col.regions=pr_change2,
          colorkey=list(space = 'right',
                        height=0.85, width=1.5, # height and width of colorbar
                        strip.border = list(col = 'grey50'),
                        at=breaks_relchange, # sequence in color ramp
                        labels=list(at=breaks_relchange, 
                                    labels=breaks_relchange,
                                    cex=1, font=1
                        )),
          axis.line = list(col='grey60'), # make black box around color bar
          # unit text right of legend
          ylab.right = list('Change in Annual Precipitation (%)', rot=270, cex=1),#, fontface='bold'),
          names.attr = c("SSP1", "SSP5"),
          cex = 1,
          scales = list(draw=FALSE) # col = 'transparent'),
          
)
dev.off()
#grid::grid.text('Change in Annual Precipitation (mm)', y=unit(0.5, "npc"), #how to adjust fontface and size for legend title
#                rot=270, x=unit(1.0, "npc"), gp=gpar(fontsize=12, font=1))
setwd(dir = 'E:/Masterarbeit/Data/PLOTS/PANELS')
dev.print(jpeg, paste("PAN_pr_relchange.jpg", sep="_"),
          quality=100, width=1500, height=1057, res=180, pointsize=12)




par(xpd = TRUE) #Draw outside plot area
box(which = "inner", lty = "solid", lwd=5, col='black')
# which character, one of "plot", "figure", "inner" and "outer".



levelplot(pr_relchange_ssp1,
          layout = c(1,1),
          col.regions =pr_change2) #4 rows, 4 columns

breaks=c(-10,-7,-4,-1,1,4,7,10,13,16),
col=pr_change2,









                
